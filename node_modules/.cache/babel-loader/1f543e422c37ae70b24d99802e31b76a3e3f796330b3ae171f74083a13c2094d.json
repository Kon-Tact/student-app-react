{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GODINGEN MARIE\\\\Documents\\\\student-app-react\\\\src\\\\component\\\\NavBar.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport Stack from '@mui/material/Stack';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport PersonAddAltIcon from '@mui/icons-material/PersonAddAlt';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport DeleteSweepIcon from '@mui/icons-material/DeleteSweep';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport ListIcon from '@mui/icons-material/List';\nimport SlideDialog from './MaterialModal';\nimport { Snackbar } from '@mui/material';\nimport ConnectedAccount from '../models/ConnectedAccount';\nimport Loader from './loader';\nimport library from '../helpers/library';\nimport Title from './Title';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ApiAccess from '../services/api-access';\nimport { useHistory } from 'react-router-dom';\nimport routes from '../helpers/routes';\nimport cookieServiceInstance from '../services/cookies';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NavBar = () => {\n  _s();\n  const isMediumScreen = useMediaQuery('(max-width: 800px)');\n  const [isConnected, setConnected] = React.useState(false);\n  const [isAdmin, setAdmin] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [isLogoutDialogOpen, setLogoutDialogOpen] = React.useState(false);\n  const [isClearDialogOpen, setClearDialogOpen] = React.useState(false);\n  const [isConnexionSnackOpen, setConnexionSnackOpen] = React.useState(false);\n  React.useEffect(() => {\n    if (ConnectedAccount.id) {\n      ConnectedAccount.connect(new Account());\n    }\n    retrieveDataAfterLoad();\n  }, []);\n  function retrieveDataAfterLoad() {\n    if (cookieServiceInstance.getCookie(library.account)) {\n      ConnectedAccount.connect(JSON.parse(cookieServiceInstance.getCookie(library.account)));\n      ConnectedAccount.authToken = cookieServiceInstance.getCookie(library.token);\n    }\n    setAdmin(ConnectedAccount.roleB);\n  }\n  document.addEventListener('DOMContentLoaded', retrieveDataAfterLoad);\n  if (ConnectedAccount.username) {\n    setAdmin(ConnectedAccount.roleB);\n    setConnected(true);\n  }\n  const LogoutManagement = async () => {\n    setLoading(true);\n    try {\n      await ApiAccess.logout();\n    } finally {\n      goToPage(routes.connexion);\n      setLogoutDialogOpen(false);\n      setLoading(false);\n      window.location.reload();\n    }\n  };\n  const ClearBase = () => {\n    ApiAccess.clearBase();\n  };\n  const history = useHistory();\n  const goToPage = path => {\n    history.push(path);\n  };\n  const openLogoutDialog = () => {\n    setLogoutDialogOpen(true);\n  };\n  const closeLogoutDialog = () => {\n    setLogoutDialogOpen(false);\n  };\n  const openClearDialog = () => {\n    setClearDialogOpen(true);\n  };\n  const closeClearDialog = () => {\n    setClearDialogOpen(false);\n  };\n  const openSnack = () => {\n    if (!isConnexionSnackOpen) {\n      setConnexionSnackOpen(true);\n    }\n  };\n  const closeSnack = () => {\n    setConnexionSnackOpen(false);\n  };\n  const action = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      size: \"small\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: closeSnack,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          sx: {\n            justifyContent: 'space-between'\n          },\n          disableGutters: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: isConnected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: isAdmin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: isMediumScreen ? /*#__PURE__*/_jsxDEV(Stack, {\n                  direction: \"row\",\n                  spacing: 1,\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"large\",\n                    \"aria-label\": \"accounts list\",\n                    \"aria-haspopup\": \"true\",\n                    color: \"inherit\",\n                    onClick: () => goToPage(routes.addstudent),\n                    children: /*#__PURE__*/_jsxDEV(PersonAddAltIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"large\",\n                    \"aria-label\": \"account update\",\n                    \"aria-haspopup\": \"true\",\n                    color: \"inherit\",\n                    onClick: openClearDialog,\n                    children: /*#__PURE__*/_jsxDEV(DeleteSweepIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 49\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Stack, {\n                    direction: \"row\",\n                    spacing: 1,\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      sx: {\n                        color: 'inherit'\n                      },\n                      onClick: () => goToPage(routes.addstudent),\n                      children: library.studentRegister\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      sx: {\n                        color: 'inherit'\n                      },\n                      onClick: openClearDialog,\n                      children: library.dbSweep\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                    direction: \"row\",\n                    spacing: 1,\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      sx: {\n                        color: 'inherit'\n                      },\n                      onClick: () => goToPage(routes.accounts),\n                      children: library.accountList\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      sx: {\n                        color: 'inherit'\n                      },\n                      onClick: () => goToPage(routes.profil),\n                      children: library.profil\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      sx: {\n                        color: 'inherit'\n                      },\n                      onClick: openLogoutDialog,\n                      children: library.deconnection\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [isMediumScreen ? /*#__PURE__*/_jsxDEV(Stack, {\n                  direction: \"row\",\n                  spacing: 1,\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"large\",\n                    \"aria-label\": \"accounts list\",\n                    \"aria-haspopup\": \"true\",\n                    color: \"inherit\",\n                    onClick: () => goToPage(routes.addstudent),\n                    children: /*#__PURE__*/_jsxDEV(PersonAddAltIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 49\n                }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n                  direction: \"row\",\n                  spacing: 1,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    sx: {\n                      color: 'inherit'\n                    },\n                    onClick: () => goToPage(routes.addstudent),\n                    children: library.studentRegister\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                  direction: \"row\",\n                  spacing: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    sx: {\n                      color: 'inherit'\n                    },\n                    onClick: () => goToPage(routes.profil),\n                    children: library.profil\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    sx: {\n                      color: 'inherit'\n                    },\n                    onClick: openLogoutDialog,\n                    children: library.deconnection\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [isMediumScreen ? /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"large\",\n                  \"aria-label\": \"accounts list\",\n                  \"aria-haspopup\": \"true\",\n                  color: \"inherit\",\n                  onClick: openSnack,\n                  children: /*#__PURE__*/_jsxDEV(PersonAddAltIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"large\",\n                  \"aria-label\": \"account update\",\n                  \"aria-haspopup\": \"true\",\n                  color: \"inherit\",\n                  onClick: openSnack,\n                  children: /*#__PURE__*/_jsxDEV(DeleteSweepIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  sx: {\n                    color: 'inherit'\n                  },\n                  onClick: openSnack,\n                  children: library.studentRegister\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  sx: {\n                    color: 'inherit'\n                  },\n                  onClick: openSnack,\n                  children: library.dbSweep\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 37\n              }, this), isMediumScreen ? /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"large\",\n                  \"aria-label\": \"accounts list\",\n                  \"aria-haspopup\": \"true\",\n                  color: \"inherit\",\n                  onClick: () => goToPage(routes.accounts),\n                  children: /*#__PURE__*/_jsxDEV(ListIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"large\",\n                  \"aria-label\": \"account update\",\n                  \"aria-haspopup\": \"true\",\n                  color: \"inherit\",\n                  onClick: () => goToPage(routes.profil),\n                  children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"large\",\n                  \"aria-label\": \"deconnection\",\n                  \"aria-haspopup\": \"true\",\n                  color: \"inherit\",\n                  onClick: openLogoutDialog,\n                  children: /*#__PURE__*/_jsxDEV(LogoutIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  sx: {\n                    color: 'inherit'\n                  },\n                  onClick: () => goToPage(routes.connexion),\n                  children: library.connexion\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  sx: {\n                    color: 'inherit'\n                  },\n                  onClick: () => goToPage(routes.register),\n                  children: library.register\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SlideDialog, {\n      isOpen: isLogoutDialogOpen,\n      onClose: closeLogoutDialog,\n      onConfirm: LogoutManagement,\n      title: 'Deconnexion',\n      children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Vous allez vous d\\xE9connecter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xCAtes vous s\\xFBr de continuer ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SlideDialog, {\n      isOpen: isClearDialogOpen,\n      onClose: closeClearDialog,\n      onConfirm: ClearBase,\n      title: 'Vider la base',\n      children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Vous allez vider la base de donn\\xE9e\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Cette action est irreversible\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xCAtes vous s\\xFBr de vouloir continuer ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      open: isConnexionSnackOpen,\n      autoHideDuration: 3000,\n      onClose: closeSnack,\n      message: \"Vous devez vous connecter en premier\",\n      action: action\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n_s(NavBar, \"LjB6s3X9SsVBWPpf92fpgyiJfnQ=\", false, function () {\n  return [useMediaQuery, useHistory];\n});\n_c = NavBar;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","AppBar","Box","Toolbar","Container","Button","IconButton","Stack","useMediaQuery","PersonAddAltIcon","LogoutIcon","DeleteSweepIcon","AccountCircleIcon","ListIcon","SlideDialog","Snackbar","ConnectedAccount","Loader","library","Title","CloseIcon","ApiAccess","useHistory","routes","cookieServiceInstance","jsxDEV","_jsxDEV","Fragment","_Fragment","NavBar","_s","isMediumScreen","isConnected","setConnected","useState","isAdmin","setAdmin","loading","setLoading","isLogoutDialogOpen","setLogoutDialogOpen","isClearDialogOpen","setClearDialogOpen","isConnexionSnackOpen","setConnexionSnackOpen","useEffect","id","connect","Account","retrieveDataAfterLoad","getCookie","account","JSON","parse","authToken","token","roleB","document","addEventListener","username","LogoutManagement","logout","goToPage","connexion","window","location","reload","ClearBase","clearBase","history","path","push","openLogoutDialog","closeLogoutDialog","openClearDialog","closeClearDialog","openSnack","closeSnack","action","children","size","color","onClick","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","position","maxWidth","sx","justifyContent","disableGutters","direction","spacing","addstudent","studentRegister","dbSweep","accounts","accountList","profil","deconnection","register","isOpen","onClose","onConfirm","title","anchorOrigin","vertical","horizontal","open","autoHideDuration","message","_c","$RefreshReg$"],"sources":["C:/Users/GODINGEN MARIE/Documents/student-app-react/src/component/NavBar.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Container from '@mui/material/Container';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Stack from '@mui/material/Stack';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport PersonAddAltIcon from '@mui/icons-material/PersonAddAlt';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport DeleteSweepIcon from '@mui/icons-material/DeleteSweep';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport ListIcon from '@mui/icons-material/List';\r\nimport SlideDialog from './MaterialModal';\r\nimport { Snackbar } from '@mui/material';\r\nimport ConnectedAccount from '../models/ConnectedAccount';\r\nimport Loader from './loader';\r\nimport library from '../helpers/library';\r\nimport Title from './Title';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport ApiAccess from '../services/api-access';\r\nimport { useHistory } from 'react-router-dom';\r\nimport routes from '../helpers/routes';\r\nimport cookieServiceInstance from '../services/cookies';\r\n\r\nconst NavBar: React.FC = () => {\r\n    const isMediumScreen = useMediaQuery('(max-width: 800px)');\r\n    const [isConnected, setConnected] = React.useState(false);\r\n    const [isAdmin, setAdmin] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [isLogoutDialogOpen, setLogoutDialogOpen] = React.useState(false);\r\n    const [isClearDialogOpen, setClearDialogOpen] = React.useState(false);\r\n    const [isConnexionSnackOpen, setConnexionSnackOpen] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        if (ConnectedAccount.id) {\r\n            ConnectedAccount.connect(new Account())\r\n        }\r\n        retrieveDataAfterLoad();\r\n    }, []);\r\n\r\n    function retrieveDataAfterLoad() {\r\n        if(cookieServiceInstance.getCookie(library.account)) {\r\n            ConnectedAccount.connect(JSON.parse(cookieServiceInstance.getCookie(library.account)!));\r\n            ConnectedAccount.authToken = cookieServiceInstance.getCookie(library.token)!;\r\n        }\r\n        setAdmin(ConnectedAccount.roleB);\r\n    }\r\n\r\n    document.addEventListener('DOMContentLoaded', retrieveDataAfterLoad);\r\n\r\n    if (ConnectedAccount.username) {\r\n        setAdmin(ConnectedAccount.roleB);\r\n        setConnected(true);\r\n    }\r\n\r\n    const LogoutManagement = async () => {\r\n        setLoading(true);\r\n        try {\r\n            await ApiAccess.logout();\r\n        } finally {\r\n            goToPage(routes.connexion);\r\n            setLogoutDialogOpen(false);\r\n            setLoading(false);\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    const ClearBase = () => {\r\n        ApiAccess.clearBase();\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    const goToPage = (path: any) => {\r\n        history.push(path);\r\n    };\r\n\r\n    const openLogoutDialog = () => {\r\n        setLogoutDialogOpen(true);\r\n    }\r\n\r\n    const closeLogoutDialog = () => {\r\n        setLogoutDialogOpen(false);\r\n    }\r\n\r\n    const openClearDialog = () => {\r\n        setClearDialogOpen(true);\r\n    }\r\n\r\n    const closeClearDialog = () => {\r\n        setClearDialogOpen(false);\r\n    }\r\n\r\n    const openSnack = () => {\r\n        if(!isConnexionSnackOpen) {\r\n            setConnexionSnackOpen(true);\r\n        }   \r\n    }\r\n\r\n    const closeSnack = () => {\r\n        setConnexionSnackOpen(false);\r\n    }\r\n\r\n    const action = (\r\n        <React.Fragment>\r\n          <IconButton\r\n            size=\"small\"\r\n            aria-label=\"close\"\r\n            color=\"inherit\"\r\n            onClick={closeSnack}\r\n          >\r\n            <CloseIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </React.Fragment>\r\n      );\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AppBar position=\"static\">\r\n                <Container maxWidth=\"xl\">\r\n                    <Toolbar sx={{ justifyContent: 'space-between' }} disableGutters>\r\n                        <Box>\r\n                            {isConnected ? (\r\n                                <>\r\n                                    {isAdmin ? (\r\n                                        <>\r\n                                            {isMediumScreen ? (\r\n                                                <Stack direction=\"row\" spacing={1}>\r\n                                                    <IconButton\r\n                                                        size=\"large\"\r\n                                                        aria-label=\"accounts list\"\r\n                                                        aria-haspopup=\"true\"\r\n                                                        color=\"inherit\"\r\n                                                        onClick={() => goToPage(routes.addstudent)}\r\n                                                    >\r\n                                                        <PersonAddAltIcon />\r\n                                                    </IconButton>\r\n                                                    <IconButton\r\n                                                        size=\"large\"\r\n                                                        aria-label=\"account update\"\r\n                                                        aria-haspopup=\"true\"\r\n                                                        color=\"inherit\"\r\n                                                        onClick={openClearDialog}\r\n                                                    >\r\n                                                        <DeleteSweepIcon />\r\n                                                    </IconButton>\r\n                                                </Stack>\r\n                                            ) : (\r\n                                                <>\r\n                                                    <Stack direction=\"row\" spacing={1}>\r\n                                                        <Button sx={{ color: 'inherit' }} onClick={() => goToPage(routes.addstudent)}>\r\n                                                            {library.studentRegister}\r\n                                                        </Button>\r\n                                                        <Button sx={{ color: 'inherit' }} onClick={openClearDialog}>\r\n                                                            {library.dbSweep}\r\n                                                        </Button>\r\n                                                    </Stack>\r\n                                                    <Title />\r\n                                                    <Stack direction=\"row\" spacing={1}>\r\n                                                        <Button sx={{ color: 'inherit' }} onClick={() => goToPage(routes.accounts)}>\r\n                                                            {library.accountList}\r\n                                                        </Button>\r\n                                                        <Button sx={{ color: 'inherit' }} onClick={() => goToPage(routes.profil)}>\r\n                                                            {library.profil}\r\n                                                        </Button>\r\n                                                        <Button sx={{ color: 'inherit' }} onClick={openLogoutDialog}>\r\n                                                            {library.deconnection}\r\n                                                        </Button>\r\n                                                    </Stack>\r\n                                                </>\r\n                                            )}\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            {isMediumScreen ? (\r\n                                                <Stack direction=\"row\" spacing={1}>\r\n                                                    <IconButton\r\n                                                        size=\"large\"\r\n                                                        aria-label=\"accounts list\"\r\n                                                        aria-haspopup=\"true\"\r\n                                                        color=\"inherit\"\r\n                                                        onClick={() => goToPage(routes.addstudent)}\r\n                                                    >\r\n                                                        <PersonAddAltIcon />\r\n                                                    </IconButton>\r\n                                                </Stack>\r\n                                            ) : (\r\n                                                <Stack direction=\"row\" spacing={1}>\r\n                                                    <Button sx={{ color: 'inherit' }} onClick={() => goToPage(routes.addstudent)}>\r\n                                                        {library.studentRegister}\r\n                                                    </Button>\r\n                                                </Stack>\r\n                                            )}\r\n                                            <Title />\r\n                                            <Stack direction=\"row\" spacing={1}>\r\n                                                <Button sx={{ color: 'inherit' }} onClick={() => goToPage(routes.profil)}>\r\n                                                    {library.profil}\r\n                                                </Button>\r\n                                                <Button sx={{ color: 'inherit' }} onClick={openLogoutDialog}>\r\n                                                    {library.deconnection}\r\n                                                </Button>\r\n                                            </Stack>\r\n                                        </>\r\n                                    )}\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    {isMediumScreen ? (\r\n                                        <Stack direction=\"row\" spacing={1}>\r\n                                            <IconButton\r\n                                                size=\"large\"\r\n                                                aria-label=\"accounts list\"\r\n                                                aria-haspopup=\"true\"\r\n                                                color=\"inherit\"\r\n                                                onClick={openSnack}\r\n                                            >\r\n                                                <PersonAddAltIcon />\r\n                                            </IconButton>\r\n                                            <IconButton\r\n                                                size=\"large\"\r\n                                                aria-label=\"account update\"\r\n                                                aria-haspopup=\"true\"\r\n                                                color=\"inherit\"\r\n                                                onClick={openSnack}\r\n                                            >\r\n                                                <DeleteSweepIcon />\r\n                                            </IconButton>\r\n                                        </Stack>\r\n                                    ) : (\r\n                                        <Stack direction=\"row\" spacing={1}>\r\n                                            <Button sx={{ color: 'inherit' }} onClick={openSnack}>\r\n                                                {library.studentRegister}\r\n                                            </Button>\r\n                                            <Button sx={{ color: 'inherit' }} onClick={openSnack}>\r\n                                                {library.dbSweep}\r\n                                            </Button>\r\n                                        </Stack>\r\n                                    )}\r\n                                    <Title />\r\n                                    {isMediumScreen ? (\r\n                                        <Stack direction=\"row\" spacing={1}>\r\n                                            <IconButton\r\n                                                size=\"large\"\r\n                                                aria-label=\"accounts list\"\r\n                                                aria-haspopup=\"true\"\r\n                                                color=\"inherit\"\r\n                                                onClick={() => goToPage(routes.accounts)}\r\n                                            >\r\n                                                <ListIcon />\r\n                                            </IconButton>\r\n                                            <IconButton\r\n                                                size=\"large\"\r\n                                                aria-label=\"account update\"\r\n                                                aria-haspopup=\"true\"\r\n                                                color=\"inherit\"\r\n                                                onClick={() => goToPage(routes.profil)}\r\n                                            >\r\n                                                <AccountCircleIcon />\r\n                                            </IconButton>\r\n                                            <IconButton\r\n                                                size=\"large\"\r\n                                                aria-label=\"deconnection\"\r\n                                                aria-haspopup=\"true\"\r\n                                                color=\"inherit\"\r\n                                                onClick={openLogoutDialog}\r\n                                            >\r\n                                                <LogoutIcon />\r\n                                            </IconButton>\r\n                                        </Stack>\r\n                                    ) : (\r\n                                        <Stack direction=\"row\" spacing={1}>\r\n                                            <Button sx={{ color: 'inherit' }} onClick={() => goToPage(routes.connexion)}>\r\n                                                {library.connexion}\r\n                                            </Button>\r\n                                            <Button sx={{ color: 'inherit' }} onClick={() => goToPage(routes.register)}>\r\n                                                {library.register}\r\n                                            </Button>\r\n                                        </Stack>\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                        </Box>\r\n                    </Toolbar>\r\n                </Container>\r\n            </AppBar>\r\n\r\n            <SlideDialog isOpen={isLogoutDialogOpen} onClose={closeLogoutDialog} onConfirm={LogoutManagement} title={'Deconnexion'}>\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : (\r\n                    <>\r\n                        <p>Vous allez vous déconnecter</p>\r\n                        <p>Êtes vous sûr de continuer ?</p>\r\n                    </>\r\n                )}\r\n            </SlideDialog>\r\n\r\n            <SlideDialog isOpen={isClearDialogOpen} onClose={closeClearDialog} onConfirm={ClearBase} title={'Vider la base'}>\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : (\r\n                    <>\r\n                        <p>Vous allez vider la base de donnée</p>\r\n                        <p>Cette action est irreversible</p>\r\n                        <p>Êtes vous sûr de vouloir continuer ?</p>\r\n                    </>\r\n                )}\r\n\r\n            </SlideDialog>\r\n            <Snackbar\r\n                anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}\r\n                open={isConnexionSnackOpen}\r\n                autoHideDuration={3000}\r\n                onClose={closeSnack}\r\n                message=\"Vous devez vous connecter en premier\"\r\n                action={action}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}