{"ast":null,"code":"var _cookieServiceInstanc;import API_ENDPOINTS from\"../config/api-config\";import Account from\"../models/Account\";import cookieServiceInstance from\"./cookies\";import library from\"../helpers/library\";const token=(_cookieServiceInstanc=cookieServiceInstance.getCookie(library.token))!==null&&_cookieServiceInstanc!==void 0?_cookieServiceInstanc:'';export default class ApiAccess{static getStudents(){return fetch(API_ENDPOINTS.studentList).then(response=>{if(!response.ok){throw new Error('Failed to fetch students');}return response.json();}).catch(error=>{console.error('Error fetching students:',error);return[];// Return a default value (empty array) in case of error\n});}static login(credentials){return fetch(API_ENDPOINTS.login,{method:'POST',body:JSON.stringify(credentials),headers:{'Content-Type':'application/json'}}).then(response=>response.json()).catch(error=>console.error(error));}static logout(){return fetch(API_ENDPOINTS.logout,{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(response=>{cookieServiceInstance.removeCookie(library.account);cookieServiceInstance.removeCookie(library.token);return response.json();}).catch(error=>console.error(error));}static saveStudent(student){return fetch(API_ENDPOINTS.saveStudent,{method:'POST',body:JSON.stringify(student),headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(response=>response.json()).catch(error=>console.error(error));}static clearBase(){return fetch(API_ENDPOINTS.clearBase,{method:'DELETE',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(response=>response.json()).catch(error=>console.error(error));}static deleteStudent(student){return fetch(API_ENDPOINTS.deleteStudent+student.id,{method:'DELETE',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(reponse=>reponse.json()).catch(error=>console.error(error));}static getAccountList(){return fetch(API_ENDPOINTS.accountList,{method:'GET',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(response=>response.json()).then(data=>{// Map the data to include only the required fields\nreturn data.map(accountData=>{const{id,username,email,role}=accountData;let account=new Account(username,'',email,role);account.id=id;return account;});}).catch(error=>{console.error(error);return[];// Return empty array in case of error\n});}static saveAccount(credentials){return fetch(API_ENDPOINTS.saveAccount,{method:'POST',body:JSON.stringify(credentials),headers:{'Content-Type':'application/json'}}).then(response=>response.json()).catch(error=>console.error(error));}static editAccount(account){return fetch(API_ENDPOINTS.editAccount,{method:'PUT',body:JSON.stringify(account),headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(response=>response.json()).catch(error=>console.error(error));}static deleteAccount(account){return fetch(API_ENDPOINTS.deleteAccount+account.id,{method:'DELETE',body:JSON.stringify(account),headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(response=>response.json()).catch(error=>console.error(error));}static changeRole(idRole){return fetch(API_ENDPOINTS.changeRole,{method:'POST',body:JSON.stringify(idRole),headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(response=>response.json()).catch(error=>console.error(error));}static editStudent(student){return fetch(API_ENDPOINTS.editStudent,{method:'PUT',body:JSON.stringify(student),headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(response=>response.json()).catch(error=>console.error(error));}static validate(student){return fetch(API_ENDPOINTS.validate+student.id,{method:'PUT',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(response=>response.json()).catch(error=>console.error(error));}}","map":{"version":3,"names":["API_ENDPOINTS","Account","cookieServiceInstance","library","token","_cookieServiceInstanc","getCookie","ApiAccess","getStudents","fetch","studentList","then","response","ok","Error","json","catch","error","console","login","credentials","method","body","JSON","stringify","headers","logout","concat","removeCookie","account","saveStudent","student","clearBase","deleteStudent","id","reponse","getAccountList","accountList","data","map","accountData","username","email","role","saveAccount","editAccount","deleteAccount","changeRole","idRole","editStudent","validate"],"sources":["C:/Users/GODINGEN MARIE/Documents/student-app-react/src/services/api-access.ts"],"sourcesContent":["import Student from \"../models/Student\";\r\nimport API_ENDPOINTS from \"../config/api-config\";\r\nimport Account from \"../models/Account\";\r\nimport AccountResponse from \"../models/AccountResponse\";\r\nimport Credentials from \"../models/Credentials\";\r\nimport cookieServiceInstance from \"./cookies\";\r\nimport library from \"../helpers/library\";\r\n\r\nconst token: string = cookieServiceInstance.getCookie(library.token) ?? '';\r\n\r\nexport default class ApiAccess {\r\n\r\n    static getStudents(): Promise<Student[]> {\r\n        return fetch(API_ENDPOINTS.studentList)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch students');\r\n                }\r\n                return response.json();\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching students:', error);\r\n                return []; // Return a default value (empty array) in case of error\r\n            });\r\n    }\r\n\r\n    static login(credentials: Credentials): Promise<AccountResponse> {\r\n        return fetch(API_ENDPOINTS.login, {\r\n            method: 'POST',\r\n            body: JSON.stringify(credentials),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error))\r\n    }\r\n\r\n    static logout(): Promise<null> {\r\n\r\n        return fetch(API_ENDPOINTS.logout, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(response => {\r\n                cookieServiceInstance.removeCookie(library.account);\r\n                cookieServiceInstance.removeCookie(library.token);\r\n                return response.json();\r\n            })\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static saveStudent(student: Student): Promise<Student> {\r\n\r\n        return fetch(API_ENDPOINTS.saveStudent, {\r\n            method: 'POST',\r\n            body: JSON.stringify(student),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static clearBase(): Promise<null> {\r\n\r\n        return fetch(API_ENDPOINTS.clearBase, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static deleteStudent(student: Student): Promise<null> {\r\n\r\n        return fetch(API_ENDPOINTS.deleteStudent + student.id, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(reponse => reponse.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static getAccountList(): Promise<Account[]> {\r\n\r\n        return fetch(API_ENDPOINTS.accountList, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // Map the data to include only the required fields\r\n                return data.map((accountData: { id: string; username: string; email: string; role: string; }) => {\r\n                    const { id, username, email, role } = accountData;\r\n                    let account: Account = new Account(username, '', email, role);\r\n                    account.id = id;\r\n                    return account;\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n                return []; // Return empty array in case of error\r\n            });\r\n    }\r\n\r\n\r\n    static saveAccount(credentials: Credentials): Promise<AccountResponse> {\r\n        return fetch(API_ENDPOINTS.saveAccount, {\r\n            method: 'POST',\r\n            body: JSON.stringify(credentials),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static editAccount(account: Account): Promise<Account> {\r\n\r\n        return fetch(API_ENDPOINTS.editAccount, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(account),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static deleteAccount(account: Account): Promise<null> {\r\n        return fetch(API_ENDPOINTS.deleteAccount + account.id, {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(account),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static changeRole(idRole: string[]): Promise<string> {\r\n\r\n        return fetch(API_ENDPOINTS.changeRole, {\r\n            method: 'POST',\r\n            body: JSON.stringify(idRole),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static editStudent(student: Student): Promise<Student> {\r\n\r\n        return fetch(API_ENDPOINTS.editStudent, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(student),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static validate(student: Student): Promise<Student> {\r\n        return fetch(API_ENDPOINTS.validate + student.id, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}