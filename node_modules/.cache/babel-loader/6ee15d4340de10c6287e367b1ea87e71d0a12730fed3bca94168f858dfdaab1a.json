{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GODINGEN MARIE\\\\Documents\\\\student-app-react\\\\src\\\\pages\\\\account-edition-page.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Account from '../models/Account';\nimport Grid from '@mui/material/Grid/Grid';\nimport Typography from '@mui/material/Typography/Typography';\nimport Paper from '@mui/material/Paper/Paper';\nimport TextField from '@mui/material/TextField/TextField';\nimport Button from '@mui/material/Button/Button';\nimport cookieServiceInstance from '../services/cookies';\nimport { Checkbox } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountEdition = () => {\n  _s();\n  const [accountEditionForm, setAccountEditionForm] = useState({\n    username: '',\n    email: '',\n    isAdmin: false\n  });\n  const [editionAccount, setEditionAccount] = useState(new Account());\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAccountEditionForm({\n      ...accountEditionForm,\n      [name]: value\n    });\n  };\n  const handleCheckboxChange = e => {\n    console.log('In he handle checkbox change');\n    const {\n      checked\n    } = e.target;\n    setAccountEditionForm({\n      ...accountEditionForm,\n      isAdmin: checked\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const account = new Account(accountEditionForm.username, '', accountEditionForm.email);\n    account.role = accountEditionForm.isAdmin ? 'ADMIN' : 'USER';\n    account.id = editionAccount.id;\n    console.table(account);\n    //await ApiAccess.saveAccount(account);\n  };\n  useEffect(() => {\n    const storedAccount = cookieServiceInstance.getCookie('edition');\n    if (storedAccount) {\n      setEditionAccount(JSON.parse(storedAccount));\n    }\n  }, []);\n  useEffect(() => {\n    const fillForm = () => {\n      setAccountEditionForm({\n        username: editionAccount.username,\n        email: editionAccount.email,\n        isAdmin: editionAccount.role.includes('ADMIN')\n      });\n    };\n    fillForm();\n  }, [editionAccount]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 10,\n      sm: 6,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        style: {\n          padding: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          gutterBottom: true,\n          children: \"Connexion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Username\",\n            name: \"username\",\n            value: accountEditionForm.username,\n            onChange: handleChange,\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"standard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email\",\n            name: \"email\",\n            type: \"text\",\n            value: accountEditionForm.email,\n            onChange: handleChange,\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"standard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            name: \"isAdmin\",\n            checked: accountEditionForm.isAdmin,\n            onChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            children: \"Editer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(AccountEdition, \"w3PFzNLbnli361teFkwBUWAgKrs=\");\n_c = AccountEdition;\nexport default AccountEdition;\nvar _c;\n$RefreshReg$(_c, \"AccountEdition\");","map":{"version":3,"names":["React","useEffect","useState","Account","Grid","Typography","Paper","TextField","Button","cookieServiceInstance","Checkbox","jsxDEV","_jsxDEV","AccountEdition","_s","accountEditionForm","setAccountEditionForm","username","email","isAdmin","editionAccount","setEditionAccount","handleChange","e","name","value","target","handleCheckboxChange","console","log","checked","handleSubmit","preventDefault","account","role","id","table","storedAccount","getCookie","JSON","parse","fillForm","includes","container","justifyContent","alignItems","style","minHeight","children","item","xs","sm","md","elevation","padding","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","onChange","fullWidth","margin","type","color","_c","$RefreshReg$"],"sources":["C:/Users/GODINGEN MARIE/Documents/student-app-react/src/pages/account-edition-page.tsx"],"sourcesContent":["import React, { ChangeEvent, FunctionComponent, useEffect, useState } from 'react';\r\nimport ApiAccess from '../services/api-access';\r\nimport Account from '../models/Account';\r\nimport Grid from '@mui/material/Grid/Grid';\r\nimport Typography from '@mui/material/Typography/Typography';\r\nimport Paper from '@mui/material/Paper/Paper';\r\nimport TextField from '@mui/material/TextField/TextField';\r\nimport Button from '@mui/material/Button/Button';\r\nimport cookieServiceInstance from '../services/cookies';\r\nimport { Checkbox } from '@mui/material';\r\n\r\nconst AccountEdition: FunctionComponent = () => {\r\n\r\n    const [accountEditionForm, setAccountEditionForm] = useState({\r\n        username: '',\r\n        email: '',\r\n        isAdmin: false\r\n    });\r\n\r\n    const [editionAccount, setEditionAccount] = useState(new Account());\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        setAccountEditionForm({\r\n            ...accountEditionForm,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleCheckboxChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        console.log('In he handle checkbox change');\r\n        const { checked } = e.target;\r\n        setAccountEditionForm({\r\n            ...accountEditionForm,\r\n            isAdmin: checked\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        const account: Account = new Account(accountEditionForm.username, '', accountEditionForm.email);\r\n        account.role = accountEditionForm.isAdmin ? 'ADMIN' : 'USER';\r\n        account.id = editionAccount.id;\r\n        console.table(account);\r\n        //await ApiAccess.saveAccount(account);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const storedAccount = cookieServiceInstance.getCookie('edition');\r\n        if (storedAccount) {\r\n            setEditionAccount(JSON.parse(storedAccount));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fillForm = () => {\r\n            setAccountEditionForm({\r\n                username: editionAccount.username,\r\n                email: editionAccount.email,\r\n                isAdmin: editionAccount.role.includes('ADMIN')\r\n            });\r\n        };\r\n\r\n        fillForm();\r\n    }, [editionAccount]);\r\n\r\n    return (\r\n        <Grid container justifyContent=\"center\" alignItems=\"center\" style={{ minHeight: '100vh' }}>\r\n            <Grid item xs={10} sm={6} md={4}>\r\n                <Paper elevation={3} style={{ padding: '20px' }}>\r\n                    <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                        Connexion\r\n                    </Typography>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <TextField\r\n                            label=\"Username\"\r\n                            name=\"username\"\r\n                            value={accountEditionForm.username}\r\n                            onChange={handleChange}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            variant=\"standard\"\r\n                        />\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            name=\"email\"\r\n                            type=\"text\"\r\n                            value={accountEditionForm.email}\r\n                            onChange={handleChange}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            variant=\"standard\"\r\n                        />\r\n                        <label>Admin</label>\r\n                        <Checkbox\r\n                            name='isAdmin'\r\n                            checked={accountEditionForm.isAdmin}\r\n                            onChange={handleCheckboxChange}\r\n                        />\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                            Editer\r\n                        </Button>\r\n                    </form>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default AccountEdition;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}