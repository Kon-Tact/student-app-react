{"ast":null,"code":"import*as React from'react';import AppBar from'@mui/material/AppBar';import Toolbar from'@mui/material/Toolbar';import Container from'@mui/material/Container';import Button from'@mui/material/Button';import IconButton from'@mui/material/IconButton';import useMediaQuery from'@mui/material/useMediaQuery';import PersonAddAltIcon from'@mui/icons-material/PersonAddAlt';import LogoutIcon from'@mui/icons-material/Logout';import PersonAddIcon from'@mui/icons-material/PersonAdd';import DeleteSweepIcon from'@mui/icons-material/DeleteSweep';import AccountCircleIcon from'@mui/icons-material/AccountCircle';import ListIcon from'@mui/icons-material/List';import LoginIcon from'@mui/icons-material/Login';import SlideDialog from'./MaterialModal';import{Box,Snackbar}from'@mui/material';import Loader from'./loader';import library from'../helpers/library';import Title from'./Title';import CloseIcon from'@mui/icons-material/Close';import ApiAccess from'../services/api-access';import{useHistory}from'react-router-dom';import routes from'../helpers/routes';import cookieServiceInstance from'../services/cookies';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const NavBar=()=>{const isMediumScreen=useMediaQuery('(max-width: 800px)');const[loading,setLoading]=React.useState(false);const[isLogoutDialogOpen,setLogoutDialogOpen]=React.useState(false);const[isClearDialogOpen,setClearDialogOpen]=React.useState(false);const[isConnexionSnackOpen,setConnexionSnackOpen]=React.useState(false);const[isLogoutFail,setLogoutSnack]=React.useState(false);const LogoutManagement=async()=>{setLoading(true);try{await ApiAccess.logout();}catch(error){console.error('Error with the logout method');setLogoutSnack(true);}finally{goToPage(routes.connexion);setLogoutDialogOpen(false);setLoading(false);window.location.reload();}};const ClearBase=()=>{ApiAccess.clearBase();};const history=useHistory();const goToPage=path=>{history.push(path);};const openLogoutDialog=()=>{setLogoutDialogOpen(true);};const closeLogoutDialog=()=>{setLogoutDialogOpen(false);};const openClearDialog=()=>{setClearDialogOpen(true);};const closeClearDialog=()=>{setClearDialogOpen(false);};const openSnack=()=>{if(!isConnexionSnackOpen){setConnexionSnackOpen(true);}};const closeSnack=()=>{setConnexionSnackOpen(false);};const isAuthenticated=cookieServiceInstance.isAuthenticated();React.useEffect(()=>{if(isAuthenticated){history.push(routes.home);}},[isAuthenticated,history]);const action=/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",\"aria-label\":\"close\",color:\"inherit\",onClick:closeSnack,children:/*#__PURE__*/_jsx(CloseIcon,{fontSize:\"small\"})})});return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(AppBar,{position:\"static\",children:/*#__PURE__*/_jsx(Container,{maxWidth:\"xl\",children:/*#__PURE__*/_jsx(Toolbar,{sx:{justifyContent:'space-between'},disableGutters:true,children:cookieServiceInstance.getCookie(library.account)?/*#__PURE__*/_jsx(_Fragment,{children:cookieServiceInstance.getCookie(library.role)?/*#__PURE__*/_jsx(_Fragment,{children:isMediumScreen?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(IconButton,{size:\"large\",\"aria-label\":\"accounts list\",\"aria-haspopup\":\"true\",color:\"inherit\",onClick:()=>goToPage(routes.addstudent),children:/*#__PURE__*/_jsx(PersonAddAltIcon,{})}),/*#__PURE__*/_jsx(IconButton,{size:\"large\",\"aria-label\":\"account update\",\"aria-haspopup\":\"true\",color:\"inherit\",onClick:openClearDialog,children:/*#__PURE__*/_jsx(DeleteSweepIcon,{})})]}),/*#__PURE__*/_jsx(Title,{}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(IconButton,{size:\"large\",\"aria-label\":\"accounts list\",\"aria-haspopup\":\"true\",color:\"inherit\",onClick:()=>goToPage(routes.accounts),children:/*#__PURE__*/_jsx(ListIcon,{})}),/*#__PURE__*/_jsx(IconButton,{size:\"large\",\"aria-label\":\"account update\",\"aria-haspopup\":\"true\",color:\"inherit\",onClick:()=>goToPage(routes.profil),children:/*#__PURE__*/_jsx(AccountCircleIcon,{})}),/*#__PURE__*/_jsx(IconButton,{size:\"large\",\"aria-label\":\"account update\",\"aria-haspopup\":\"true\",color:\"inherit\",onClick:LogoutManagement,children:/*#__PURE__*/_jsx(AccountCircleIcon,{})})]})]})}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Button,{sx:{color:'inherit'},onClick:()=>goToPage(routes.addstudent),children:library.studentRegister}),/*#__PURE__*/_jsx(Button,{sx:{color:'inherit'},onClick:openClearDialog,children:library.dbSweep})]}),/*#__PURE__*/_jsx(Title,{}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Button,{sx:{color:'inherit'},onClick:()=>goToPage(routes.accounts),children:library.accountList}),/*#__PURE__*/_jsx(Button,{sx:{color:'inherit'},onClick:()=>goToPage(routes.profil),children:library.profil}),/*#__PURE__*/_jsx(Button,{sx:{color:'inherit'},onClick:openLogoutDialog,children:library.deconnection})]})]})})}):/*#__PURE__*/_jsx(_Fragment,{children:isMediumScreen?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(IconButton,{size:\"large\",\"aria-label\":\"accounts list\",\"aria-haspopup\":\"true\",color:\"inherit\",onClick:()=>goToPage(routes.addstudent),children:/*#__PURE__*/_jsx(PersonAddAltIcon,{})}),/*#__PURE__*/_jsx(IconButton,{size:\"large\",\"aria-label\":\"accounts list\",\"aria-haspopup\":\"true\",color:\"inherit\",onClick:ClearBase,children:/*#__PURE__*/_jsx(DeleteSweepIcon,{})})]}),/*#__PURE__*/_jsx(Title,{}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(IconButton,{size:\"large\",\"aria-label\":\"accounts list\",\"aria-haspopup\":\"true\",color:\"inherit\",onClick:()=>goToPage(routes.profil),children:/*#__PURE__*/_jsx(AccountCircleIcon,{})}),/*#__PURE__*/_jsx(IconButton,{size:\"large\",\"aria-label\":\"accounts list\",\"aria-haspopup\":\"true\",color:\"inherit\",onClick:LogoutManagement,children:/*#__PURE__*/_jsx(LogoutIcon,{})})]})]})}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Button,{sx:{color:'inherit'},onClick:()=>goToPage(routes.addstudent),children:library.studentRegister}),/*#__PURE__*/_jsx(Button,{sx:{color:'inherit'},onClick:ClearBase,children:library.dbSweep})]}),/*#__PURE__*/_jsx(Title,{}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Button,{sx:{color:'inherit'},onClick:()=>goToPage(routes.profil),children:library.profil}),/*#__PURE__*/_jsx(Button,{sx:{color:'inherit'},onClick:openLogoutDialog,children:library.deconnection})]})]})})})}):/*#__PURE__*/_jsx(_Fragment,{children:isMediumScreen?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(IconButton,{size:\"large\",\"aria-label\":\"accounts list\",\"aria-haspopup\":\"true\",color:\"inherit\",onClick:openSnack,children:/*#__PURE__*/_jsx(PersonAddAltIcon,{})}),/*#__PURE__*/_jsx(IconButton,{size:\"large\",\"aria-label\":\"account update\",\"aria-haspopup\":\"true\",color:\"inherit\",onClick:openSnack,children:/*#__PURE__*/_jsx(DeleteSweepIcon,{})})]}),/*#__PURE__*/_jsx(Title,{}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(IconButton,{size:\"large\",\"aria-label\":\"accounts list\",\"aria-haspopup\":\"true\",color:\"inherit\",onClick:()=>goToPage(routes.connexion),children:/*#__PURE__*/_jsx(LoginIcon,{})}),/*#__PURE__*/_jsx(IconButton,{size:\"large\",\"aria-label\":\"account update\",\"aria-haspopup\":\"true\",color:\"inherit\",onClick:()=>goToPage(routes.register),children:/*#__PURE__*/_jsx(PersonAddIcon,{})})]})]})}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Button,{sx:{color:'inherit'},onClick:openSnack,children:library.studentRegister}),/*#__PURE__*/_jsx(Button,{sx:{color:'inherit'},onClick:openSnack,children:library.dbSweep})]}),/*#__PURE__*/_jsx(Title,{}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Button,{sx:{color:'inherit'},onClick:()=>goToPage(routes.connexion),children:library.connexion}),/*#__PURE__*/_jsx(Button,{sx:{color:'inherit'},onClick:()=>goToPage(routes.register),children:library.register})]})]})})})})}),/*#__PURE__*/_jsx(SlideDialog,{isOpen:isLogoutDialogOpen,onClose:closeLogoutDialog,onConfirm:LogoutManagement,title:'Deconnexion',children:loading?/*#__PURE__*/_jsx(Loader,{}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Vous allez vous d\\xE9connecter\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\xCAtes vous s\\xFBr de continuer ?\"})]})}),/*#__PURE__*/_jsx(SlideDialog,{isOpen:isClearDialogOpen,onClose:closeClearDialog,onConfirm:ClearBase,title:'Vider la base',children:loading?/*#__PURE__*/_jsx(Loader,{}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Vous allez vider la base de donn\\xE9e\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Cette action est irreversible\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\xCAtes vous s\\xFBr de vouloir continuer ?\"})]})}),/*#__PURE__*/_jsx(Snackbar,{anchorOrigin:{vertical:'bottom',horizontal:'center'},open:isConnexionSnackOpen,autoHideDuration:3000,onClose:closeSnack,message:\"Vous devez vous connecter en premier.\",action:action}),/*#__PURE__*/_jsx(Snackbar,{anchorOrigin:{vertical:'bottom',horizontal:'center'},open:isLogoutFail,autoHideDuration:3000,onClose:closeSnack,message:\"Probl\\xE8me lors de la deconnexion. Merci de r\\xE9essayer.\",action:action})]});};export default NavBar;","map":{"version":3,"names":["React","AppBar","Toolbar","Container","Button","IconButton","useMediaQuery","PersonAddAltIcon","LogoutIcon","PersonAddIcon","DeleteSweepIcon","AccountCircleIcon","ListIcon","LoginIcon","SlideDialog","Box","Snackbar","Loader","library","Title","CloseIcon","ApiAccess","useHistory","routes","cookieServiceInstance","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","NavBar","isMediumScreen","loading","setLoading","useState","isLogoutDialogOpen","setLogoutDialogOpen","isClearDialogOpen","setClearDialogOpen","isConnexionSnackOpen","setConnexionSnackOpen","isLogoutFail","setLogoutSnack","LogoutManagement","logout","error","console","goToPage","connexion","window","location","reload","ClearBase","clearBase","history","path","push","openLogoutDialog","closeLogoutDialog","openClearDialog","closeClearDialog","openSnack","closeSnack","isAuthenticated","useEffect","home","action","children","size","color","onClick","fontSize","position","maxWidth","sx","justifyContent","disableGutters","getCookie","account","role","addstudent","accounts","profil","studentRegister","dbSweep","accountList","deconnection","register","isOpen","onClose","onConfirm","title","anchorOrigin","vertical","horizontal","open","autoHideDuration","message"],"sources":["C:/Users/GODINGEN MARIE/Documents/student-app-react/src/component/NavBar.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Container from '@mui/material/Container';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport PersonAddAltIcon from '@mui/icons-material/PersonAddAlt';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\r\nimport DeleteSweepIcon from '@mui/icons-material/DeleteSweep';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport ListIcon from '@mui/icons-material/List';\r\nimport LoginIcon from '@mui/icons-material/Login';\r\nimport SlideDialog from './MaterialModal';\r\nimport { Box, Snackbar } from '@mui/material';\r\nimport Loader from './loader';\r\nimport library from '../helpers/library';\r\nimport Title from './Title';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport ApiAccess from '../services/api-access';\r\nimport { useHistory } from 'react-router-dom';\r\nimport routes from '../helpers/routes';\r\nimport cookieServiceInstance from '../services/cookies';\r\nimport Account from '../models/Account';\r\n\r\nconst NavBar: React.FC = () => {\r\n    const isMediumScreen = useMediaQuery('(max-width: 800px)');\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [isLogoutDialogOpen, setLogoutDialogOpen] = React.useState(false);\r\n    const [isClearDialogOpen, setClearDialogOpen] = React.useState(false);\r\n    const [isConnexionSnackOpen, setConnexionSnackOpen] = React.useState(false);\r\n    const [isLogoutFail, setLogoutSnack] = React.useState(false);\r\n\r\n    const LogoutManagement = async () => {\r\n        setLoading(true);\r\n        try {\r\n            await ApiAccess.logout(); \r\n        } catch (error) {\r\n            console.error('Error with the logout method');\r\n            setLogoutSnack(true);\r\n        } finally {\r\n            goToPage(routes.connexion);\r\n            setLogoutDialogOpen(false);\r\n            setLoading(false);\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    const ClearBase = () => {\r\n        ApiAccess.clearBase();\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    const goToPage = (path: any) => {\r\n        history.push(path);\r\n    };\r\n\r\n    const openLogoutDialog = () => {\r\n        setLogoutDialogOpen(true);\r\n    }\r\n\r\n    const closeLogoutDialog = () => {\r\n        setLogoutDialogOpen(false);\r\n    }\r\n\r\n    const openClearDialog = () => {\r\n        setClearDialogOpen(true);\r\n    }\r\n\r\n    const closeClearDialog = () => {\r\n        setClearDialogOpen(false);\r\n    }\r\n\r\n    const openSnack = () => {\r\n        if (!isConnexionSnackOpen) {\r\n            setConnexionSnackOpen(true);\r\n        }\r\n    }\r\n\r\n    const closeSnack = () => {\r\n        setConnexionSnackOpen(false);\r\n    }\r\n\r\n    const isAuthenticated = cookieServiceInstance.isAuthenticated();\r\n\r\n    React.useEffect(() => {\r\n        if (isAuthenticated) {\r\n            history.push(routes.home);\r\n        }\r\n    }, [isAuthenticated, history]);\r\n\r\n    const action = (\r\n        <React.Fragment>\r\n            <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={closeSnack}\r\n            >\r\n                <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AppBar position=\"static\">\r\n                <Container maxWidth=\"xl\">\r\n                    <Toolbar sx={{ justifyContent: 'space-between' }} disableGutters>\r\n                        {cookieServiceInstance.getCookie(library.account) ? (\r\n                            <>\r\n                                {cookieServiceInstance.getCookie(library.role) ? (\r\n                                    <>\r\n                                        {isMediumScreen ? (\r\n                                            <>\r\n                                                <React.Fragment>\r\n                                                    <Box>\r\n                                                        <IconButton\r\n                                                            size=\"large\"\r\n                                                            aria-label=\"accounts list\"\r\n                                                            aria-haspopup=\"true\"\r\n                                                            color=\"inherit\"\r\n                                                            onClick={() => goToPage(routes.addstudent)}\r\n                                                        >\r\n                                                            <PersonAddAltIcon />\r\n                                                        </IconButton>\r\n                                                        <IconButton\r\n                                                            size=\"large\"\r\n                                                            aria-label=\"account update\"\r\n                                                            aria-haspopup=\"true\"\r\n                                                            color=\"inherit\"\r\n                                                            onClick={openClearDialog}\r\n                                                        >\r\n                                                            <DeleteSweepIcon />\r\n                                                        </IconButton>\r\n                                                    </Box>\r\n                                                    <Title />\r\n                                                    <Box>\r\n                                                        <IconButton\r\n                                                            size=\"large\"\r\n                                                            aria-label=\"accounts list\"\r\n                                                            aria-haspopup=\"true\"\r\n                                                            color=\"inherit\"\r\n                                                            onClick={() => goToPage(routes.accounts)}\r\n                                                        >\r\n                                                            <ListIcon />\r\n                                                        </IconButton>\r\n                                                        <IconButton\r\n                                                            size=\"large\"\r\n                                                            aria-label=\"account update\"\r\n                                                            aria-haspopup=\"true\"\r\n                                                            color=\"inherit\"\r\n                                                            onClick={() => goToPage(routes.profil)}\r\n                                                        >\r\n                                                            <AccountCircleIcon />\r\n                                                        </IconButton>\r\n                                                        <IconButton\r\n                                                            size=\"large\"\r\n                                                            aria-label=\"account update\"\r\n                                                            aria-haspopup=\"true\"\r\n                                                            color=\"inherit\"\r\n                                                            onClick={LogoutManagement}\r\n                                                        >\r\n                                                            <AccountCircleIcon />\r\n                                                        </IconButton>\r\n                                                    </Box>\r\n                                                </React.Fragment>\r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n                                                <React.Fragment>\r\n                                                    <Box>\r\n                                                        <Button sx={{ color: 'inherit' }} onClick={() => goToPage(routes.addstudent)}>\r\n                                                            {library.studentRegister}\r\n                                                        </Button>\r\n                                                        <Button sx={{ color: 'inherit' }} onClick={openClearDialog}>\r\n                                                            {library.dbSweep}\r\n                                                        </Button>\r\n                                                    </Box>\r\n                                                    <Title />\r\n                                                    <Box>\r\n                                                        <Button sx={{ color: 'inherit' }} onClick={() => goToPage(routes.accounts)}>\r\n                                                            {library.accountList}\r\n                                                        </Button>\r\n                                                        <Button sx={{ color: 'inherit' }} onClick={() => goToPage(routes.profil)}>\r\n                                                            {library.profil}\r\n                                                        </Button>\r\n                                                        <Button sx={{ color: 'inherit' }} onClick={openLogoutDialog}>\r\n                                                            {library.deconnection}\r\n                                                        </Button>\r\n                                                    </Box>\r\n                                                </React.Fragment>\r\n                                            </>\r\n                                        )}\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        {isMediumScreen ? (\r\n                                            <>\r\n                                                <React.Fragment>\r\n                                                    <Box>\r\n                                                        <IconButton\r\n                                                            size=\"large\"\r\n                                                            aria-label=\"accounts list\"\r\n                                                            aria-haspopup=\"true\"\r\n                                                            color=\"inherit\"\r\n                                                            onClick={() => goToPage(routes.addstudent)}\r\n                                                        >\r\n                                                            <PersonAddAltIcon />\r\n                                                        </IconButton>\r\n                                                        <IconButton\r\n                                                            size=\"large\"\r\n                                                            aria-label=\"accounts list\"\r\n                                                            aria-haspopup=\"true\"\r\n                                                            color=\"inherit\"\r\n                                                            onClick={ClearBase}\r\n                                                        >\r\n                                                            <DeleteSweepIcon />\r\n                                                        </IconButton>\r\n                                                    </Box>\r\n                                                    <Title />\r\n                                                    <Box>\r\n                                                        <IconButton\r\n                                                            size=\"large\"\r\n                                                            aria-label=\"accounts list\"\r\n                                                            aria-haspopup=\"true\"\r\n                                                            color=\"inherit\"\r\n                                                            onClick={() => goToPage(routes.profil)}\r\n                                                        >\r\n                                                            <AccountCircleIcon />\r\n                                                        </IconButton>\r\n                                                        <IconButton\r\n                                                            size=\"large\"\r\n                                                            aria-label=\"accounts list\"\r\n                                                            aria-haspopup=\"true\"\r\n                                                            color=\"inherit\"\r\n                                                            onClick={LogoutManagement}\r\n                                                        >\r\n                                                            <LogoutIcon />\r\n                                                        </IconButton>\r\n                                                    </Box>\r\n                                                </React.Fragment>\r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n                                                <React.Fragment>\r\n                                                    <Box>\r\n                                                        <Button sx={{ color: 'inherit' }} onClick={() => goToPage(routes.addstudent)}>\r\n                                                            {library.studentRegister}\r\n                                                        </Button>\r\n                                                        <Button sx={{ color: 'inherit' }} onClick={ClearBase}>\r\n                                                            {library.dbSweep}\r\n                                                        </Button>\r\n                                                    </Box>\r\n                                                    <Title />\r\n                                                    <Box>\r\n                                                        <Button sx={{ color: 'inherit' }} onClick={() => goToPage(routes.profil)}>\r\n                                                            {library.profil}\r\n                                                        </Button>\r\n                                                        <Button sx={{ color: 'inherit' }} onClick={openLogoutDialog}>\r\n                                                            {library.deconnection}\r\n                                                        </Button>\r\n                                                    </Box>\r\n                                                </React.Fragment>\r\n                                            </>\r\n                                        )}\r\n                                    </>\r\n                                )}\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                {isMediumScreen ? (\r\n                                    <>\r\n                                        <React.Fragment>\r\n                                            <Box>\r\n                                                <IconButton\r\n                                                    size=\"large\"\r\n                                                    aria-label=\"accounts list\"\r\n                                                    aria-haspopup=\"true\"\r\n                                                    color=\"inherit\"\r\n                                                    onClick={openSnack}\r\n                                                >\r\n                                                    <PersonAddAltIcon />\r\n                                                </IconButton>\r\n                                                <IconButton\r\n                                                    size=\"large\"\r\n                                                    aria-label=\"account update\"\r\n                                                    aria-haspopup=\"true\"\r\n                                                    color=\"inherit\"\r\n                                                    onClick={openSnack}\r\n                                                >\r\n                                                    <DeleteSweepIcon />\r\n                                                </IconButton>\r\n                                            </Box>\r\n                                            <Title />\r\n                                            <Box>\r\n                                                <IconButton\r\n                                                    size=\"large\"\r\n                                                    aria-label=\"accounts list\"\r\n                                                    aria-haspopup=\"true\"\r\n                                                    color=\"inherit\"\r\n                                                    onClick={() => goToPage(routes.connexion)}\r\n                                                >\r\n                                                    <LoginIcon />\r\n                                                </IconButton>\r\n                                                <IconButton\r\n                                                    size=\"large\"\r\n                                                    aria-label=\"account update\"\r\n                                                    aria-haspopup=\"true\"\r\n                                                    color=\"inherit\"\r\n                                                    onClick={() => goToPage(routes.register)}\r\n                                                >\r\n                                                    <PersonAddIcon />\r\n                                                </IconButton>\r\n                                            </Box>\r\n                                        </React.Fragment>\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <Box>\r\n                                            <Button sx={{ color: 'inherit' }} onClick={openSnack}>\r\n                                                {library.studentRegister}\r\n                                            </Button>\r\n                                            <Button sx={{ color: 'inherit' }} onClick={openSnack}>\r\n                                                {library.dbSweep}\r\n                                            </Button>\r\n                                        </Box>\r\n                                        <Title />\r\n                                        <Box>\r\n                                            <Button sx={{ color: 'inherit' }} onClick={() => goToPage(routes.connexion)}>\r\n                                                {library.connexion}\r\n                                            </Button>\r\n                                            <Button sx={{ color: 'inherit' }} onClick={() => goToPage(routes.register)}>\r\n                                                {library.register}\r\n                                            </Button>\r\n                                        </Box>\r\n                                    </>\r\n                                )}\r\n                            </>\r\n                        )}\r\n                    </Toolbar>\r\n                </Container>\r\n            </AppBar>\r\n\r\n            <SlideDialog isOpen={isLogoutDialogOpen} onClose={closeLogoutDialog} onConfirm={LogoutManagement} title={'Deconnexion'}>\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : (\r\n                    <>\r\n                        <p>Vous allez vous déconnecter</p>\r\n                        <p>Êtes vous sûr de continuer ?</p>\r\n                    </>\r\n                )}\r\n            </SlideDialog>\r\n\r\n            <SlideDialog isOpen={isClearDialogOpen} onClose={closeClearDialog} onConfirm={ClearBase} title={'Vider la base'}>\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : (\r\n                    <>\r\n                        <p>Vous allez vider la base de donnée</p>\r\n                        <p>Cette action est irreversible</p>\r\n                        <p>Êtes vous sûr de vouloir continuer ?</p>\r\n                    </>\r\n                )}\r\n\r\n            </SlideDialog>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                open={isConnexionSnackOpen}\r\n                autoHideDuration={3000}\r\n                onClose={closeSnack}\r\n                message=\"Vous devez vous connecter en premier.\"\r\n                action={action}\r\n            />\r\n            <Snackbar\r\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                open={isLogoutFail}\r\n                autoHideDuration={3000}\r\n                onClose={closeSnack}\r\n                message=\"Problème lors de la deconnexion. Merci de réessayer.\"\r\n                action={action}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}