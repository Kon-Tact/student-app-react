{"ast":null,"code":"import React,{useState}from'react';import ApiAccess from'../services/api-access';import Grid from'@mui/material/Grid/Grid';import Typography from'@mui/material/Typography/Typography';import Paper from'@mui/material/Paper/Paper';import TextField from'@mui/material/TextField/TextField';import Button from'@mui/material/Button/Button';import Credentials from'../models/Credentials';import{useHistory}from'react-router-dom';import CloseIcon from'@mui/icons-material/Close';import routes from'../helpers/routes';import Loader from'../component/loader';import ConnectManager from'../services/connexion';import{IconButton,Snackbar}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RegisterPage=()=>{const history=useHistory();const[isErrorSnackOpen,setSnack]=useState(false);const[loading,setLoading]=useState(false);const[registerForm,setRegisterForm]=useState({username:'',password:'',email:''});const handleChange=e=>{const{name,value}=e.target;setRegisterForm({...registerForm,[name]:value});};const handleSubmit=async e=>{e.preventDefault();setLoading(true);try{//Saving the new account\nawait ApiAccess.saveAccount(new Credentials(registerForm.username,registerForm.password,registerForm.email));try{//Connecting the new account\nconst accountResponse=await ApiAccess.login(new Credentials(registerForm.username,registerForm.password));ConnectManager.connection(accountResponse);}catch(error){console.error('Bad credentials');setSnack(true);}}catch(error){console.error(error);}finally{setLoading(false);history.push(routes.home);window.location.reload();}};const closeSnack=()=>{setSnack(false);};const action=/*#__PURE__*/_jsx(IconButton,{size:\"small\",\"aria-label\":\"close\",color:\"inherit\",onClick:closeSnack,children:/*#__PURE__*/_jsx(CloseIcon,{fontSize:\"small\"})});return/*#__PURE__*/_jsx(Grid,{container:true,justifyContent:\"center\",alignItems:\"normal\",marginTop:5,style:{minHeight:'100vh'},children:/*#__PURE__*/_jsx(Grid,{item:true,xs:10,sm:6,md:6,children:/*#__PURE__*/_jsxs(Paper,{elevation:4,style:{padding:'20px'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",component:\"h2\",gutterBottom:true,children:\"Enregistrement\"}),/*#__PURE__*/_jsx(Snackbar,{anchorOrigin:{vertical:'bottom',horizontal:'center'},open:isErrorSnackOpen,autoHideDuration:3000,onClose:closeSnack,message:\"Une erreur a eu lieu lors de l'enregsitrement du compte\",action:action}),loading?/*#__PURE__*/_jsx(Loader,{}):/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(TextField,{label:\"Username\",name:\"username\",value:registerForm.username,onChange:handleChange,fullWidth:true,margin:\"normal\",variant:\"standard\",required:true}),/*#__PURE__*/_jsx(TextField,{label:\"Password\",name:\"password\",type:\"password\",value:registerForm.password,onChange:handleChange,fullWidth:true,margin:\"normal\",variant:\"standard\",required:true}),/*#__PURE__*/_jsx(TextField,{label:\"Email\",name:\"email\",type:\"text\",value:registerForm.email,onChange:handleChange,fullWidth:true,margin:\"normal\",variant:\"standard\",required:true}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",fullWidth:true,children:\"S'enregistrer\"})]})]})})});};export default RegisterPage;","map":{"version":3,"names":["React","useState","ApiAccess","Grid","Typography","Paper","TextField","Button","Credentials","useHistory","CloseIcon","routes","Loader","ConnectManager","IconButton","Snackbar","jsx","_jsx","jsxs","_jsxs","RegisterPage","history","isErrorSnackOpen","setSnack","loading","setLoading","registerForm","setRegisterForm","username","password","email","handleChange","e","name","value","target","handleSubmit","preventDefault","saveAccount","accountResponse","login","connection","error","console","push","home","window","location","reload","closeSnack","action","size","color","onClick","children","fontSize","container","justifyContent","alignItems","marginTop","style","minHeight","item","xs","sm","md","elevation","padding","variant","component","gutterBottom","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","onSubmit","label","onChange","fullWidth","margin","required","type"],"sources":["C:/Users/GODINGEN MARIE/Documents/student-app-react/src/pages/register-page.tsx"],"sourcesContent":["import React, { ChangeEvent, FunctionComponent, useState } from 'react';\r\nimport ApiAccess from '../services/api-access';\r\nimport Grid from '@mui/material/Grid/Grid';\r\nimport Typography from '@mui/material/Typography/Typography';\r\nimport Paper from '@mui/material/Paper/Paper';\r\nimport TextField from '@mui/material/TextField/TextField';\r\nimport Button from '@mui/material/Button/Button';\r\nimport Credentials from '../models/Credentials';\r\nimport AccountResponse from '../models/AccountResponse';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport routes from '../helpers/routes';\r\nimport Loader from '../component/loader';\r\nimport ConnectManager from '../services/connexion';\r\nimport { IconButton, Snackbar } from '@mui/material';\r\n\r\nconst RegisterPage: FunctionComponent = () => {\r\n    const history = useHistory();\r\n    const [isErrorSnackOpen, setSnack] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [registerForm, setRegisterForm] = useState({\r\n        username: '',\r\n        password: '',\r\n        email: ''\r\n    });\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        setRegisterForm({\r\n            ...registerForm,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        try {\r\n            //Saving the new account\r\n            await ApiAccess.saveAccount(new Credentials(registerForm.username, registerForm.password, registerForm.email));\r\n            try {\r\n                //Connecting the new account\r\n                const accountResponse: AccountResponse = await ApiAccess.login(new Credentials(registerForm.username, registerForm.password));\r\n                ConnectManager.connection(accountResponse);\r\n            } catch (error) {\r\n                console.error('Bad credentials');\r\n                setSnack(true);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        } finally {\r\n            setLoading(false);\r\n            history.push(routes.home);\r\n            window.location.reload();\r\n        }\r\n    };\r\n\r\n    const closeSnack = () => {\r\n        setSnack(false);\r\n    }\r\n\r\n    const action = (\r\n        <IconButton\r\n            size=\"small\"\r\n            aria-label=\"close\"\r\n            color=\"inherit\"\r\n            onClick={closeSnack}\r\n        >\r\n            <CloseIcon fontSize=\"small\" />\r\n        </IconButton>\r\n    );\r\n\r\n    return (\r\n        <Grid container justifyContent=\"center\" alignItems=\"normal\" marginTop={5} style={{ minHeight: '100vh' }}>\r\n            <Grid item xs={10} sm={6} md={6}>\r\n                <Paper elevation={4} style={{ padding: '20px' }}>\r\n                    <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                        Enregistrement\r\n                    </Typography>\r\n                    <Snackbar\r\n                        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                        open={isErrorSnackOpen}\r\n                        autoHideDuration={3000}\r\n                        onClose={closeSnack}\r\n                        message=\"Une erreur a eu lieu lors de l'enregsitrement du compte\"\r\n                        action={action}\r\n                    />\r\n                    {loading ? (\r\n                        <Loader />\r\n                    ) : (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <TextField\r\n                                label=\"Username\"\r\n                                name=\"username\"\r\n                                value={registerForm.username}\r\n                                onChange={handleChange}\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                variant=\"standard\"\r\n                                required\r\n                            />\r\n                            <TextField\r\n                                label=\"Password\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                value={registerForm.password}\r\n                                onChange={handleChange}\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                variant=\"standard\"\r\n                                required\r\n                            />\r\n                            <TextField\r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                type=\"text\"\r\n                                value={registerForm.email}\r\n                                onChange={handleChange}\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                variant=\"standard\"\r\n                                required\r\n                            />\r\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                                S'enregistrer\r\n                            </Button>\r\n                        </form>\r\n                    )}\r\n\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default RegisterPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}