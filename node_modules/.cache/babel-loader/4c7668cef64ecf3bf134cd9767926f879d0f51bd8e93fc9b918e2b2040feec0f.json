{"ast":null,"code":"import API_ENDPOINTS from \"../config/api-config\";\nimport Account from \"../models/Account\";\nimport cookieServiceInstance from \"./cookies\";\nimport library from \"../helpers/library\";\nexport default class ApiAccess {\n  static getStudents() {\n    return fetch(API_ENDPOINTS.studentList).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch students');\n      }\n      return response.json();\n    }).catch(error => {\n      console.error('Error fetching students:', error);\n      return []; // Return a default value (empty array) in case of error\n    });\n  }\n  static login(credentials) {\n    return fetch(API_ENDPOINTS.login, {\n      method: 'POST',\n      body: JSON.stringify(credentials),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => console.error(error));\n  }\n  static logout() {\n    return fetch(API_ENDPOINTS.logout, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${library.actualToken}`\n      }\n    }).then(response => {\n      cookieServiceInstance.removeCookie(library.account);\n      cookieServiceInstance.removeCookie(library.token);\n      return response.json();\n    }).catch(error => console.error(error));\n  }\n  static saveStudent(student) {\n    return fetch(API_ENDPOINTS.saveStudent, {\n      method: 'POST',\n      body: JSON.stringify(student),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${library.actualToken}`\n      }\n    }).then(response => response.json()).catch(error => console.error(error));\n  }\n  static clearBase() {\n    return fetch(API_ENDPOINTS.clearBase, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${library.actualToken}`\n      }\n    }).then(response => response.json()).catch(error => console.error(error));\n  }\n  static deleteStudent(student) {\n    return fetch(API_ENDPOINTS.deleteStudent + student.id, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${library.actualToken}`\n      }\n    }).then(reponse => reponse.json()).catch(error => console.error(error));\n  }\n  static getAccountList() {\n    return fetch(API_ENDPOINTS.accountList, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${library.actualToken}`\n      }\n    }).then(response => response.json()).then(data => {\n      // Map the data to include only the required fields\n      return data.map(accountData => {\n        const {\n          id,\n          username,\n          email,\n          role\n        } = accountData;\n        let account = new Account(username, '', email, role);\n        account.id = id;\n        return account;\n      });\n    }).catch(error => {\n      console.error(error);\n      return []; // Return empty array in case of error\n    });\n  }\n  static saveAccount(credentials) {\n    return fetch(API_ENDPOINTS.saveAccount, {\n      method: 'POST',\n      body: JSON.stringify(credentials),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => console.error(error));\n  }\n  static editAccount(account) {\n    return fetch(API_ENDPOINTS.editAccount, {\n      method: 'POST',\n      body: JSON.stringify(account),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${library.actualToken}`\n      }\n    }).then(response => response.json()).catch(error => console.error(error));\n  }\n  static deleteAccount(account) {\n    return fetch(API_ENDPOINTS.deleteAccount + account.id, {\n      method: 'DELETE',\n      body: JSON.stringify(account),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${library.actualToken}`\n      }\n    }).then(response => response.json()).catch(error => console.error(error));\n  }\n  static changeRole(idRole) {\n    return fetch(API_ENDPOINTS.changeRole, {\n      method: 'DELETE',\n      body: JSON.stringify(idRole),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${library.actualToken}`\n      }\n    }).then(response => response.json()).catch(error => console.error(error));\n  }\n  static editStudent(student) {\n    return fetch(API_ENDPOINTS.editStudent, {\n      method: 'PUT',\n      body: JSON.stringify(student),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${library.actualToken}`\n      }\n    }).then(response => response.json()).catch(error => console.error(error));\n  }\n}","map":{"version":3,"names":["API_ENDPOINTS","Account","cookieServiceInstance","library","ApiAccess","getStudents","fetch","studentList","then","response","ok","Error","json","catch","error","console","login","credentials","method","body","JSON","stringify","headers","logout","actualToken","removeCookie","account","token","saveStudent","student","clearBase","deleteStudent","id","reponse","getAccountList","accountList","data","map","accountData","username","email","role","saveAccount","editAccount","deleteAccount","changeRole","idRole","editStudent"],"sources":["C:/Users/GODINGEN MARIE/Documents/student-app-react/src/services/api-access.ts"],"sourcesContent":["import Student from \"../models/Student\";\r\nimport API_ENDPOINTS from \"../config/api-config\";\r\nimport Account from \"../models/Account\";\r\nimport AccountResponse from \"../models/AccountResponse\";\r\nimport Credentials from \"../models/Credentials\";\r\nimport cookieServiceInstance from \"./cookies\";\r\nimport library from \"../helpers/library\";\r\n\r\nexport default class ApiAccess {\r\n\r\n    static getStudents(): Promise<Student[]> {\r\n        return fetch(API_ENDPOINTS.studentList)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch students');\r\n                }\r\n                return response.json();\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching students:', error);\r\n                return []; // Return a default value (empty array) in case of error\r\n            });\r\n    }\r\n\r\n    static login(credentials: Credentials): Promise<AccountResponse> {\r\n        return fetch(API_ENDPOINTS.login, {\r\n            method: 'POST',\r\n            body: JSON.stringify(credentials),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error))\r\n    }\r\n\r\n    static logout(): Promise<null> {\r\n\r\n        return fetch(API_ENDPOINTS.logout, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${library.actualToken}`\r\n            }\r\n        })\r\n            .then(response => {\r\n                cookieServiceInstance.removeCookie(library.account);\r\n                cookieServiceInstance.removeCookie(library.token);\r\n                return response.json();\r\n            })\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static saveStudent(student: Student): Promise<Student> {\r\n\r\n        return fetch(API_ENDPOINTS.saveStudent, {\r\n            method: 'POST',\r\n            body: JSON.stringify(student),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${library.actualToken}`\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static clearBase(): Promise<null> {\r\n\r\n        return fetch(API_ENDPOINTS.clearBase, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${library.actualToken}`\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static deleteStudent(student: Student): Promise<null> {\r\n\r\n        return fetch(API_ENDPOINTS.deleteStudent + student.id, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${library.actualToken}`\r\n            }\r\n        })\r\n            .then(reponse => reponse.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static getAccountList(): Promise<Account[]> {\r\n    \r\n        return fetch(API_ENDPOINTS.accountList, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${library.actualToken}`\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            // Map the data to include only the required fields\r\n            return data.map((accountData: { id: string; username: string; email: string; role: string; }) => {\r\n                const { id, username, email, role } = accountData;\r\n                let account: Account = new Account(username, '', email, role);\r\n                account.id = id;\r\n                return account;\r\n            });\r\n        })\r\n        .catch(error => {\r\n            console.error(error);\r\n            return []; // Return empty array in case of error\r\n        });\r\n    }\r\n    \r\n\r\n    static saveAccount(credentials: Credentials): Promise<AccountResponse> {\r\n        return fetch(API_ENDPOINTS.saveAccount, {\r\n            method: 'POST',\r\n            body: JSON.stringify(credentials),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static editAccount(account: Account): Promise<Account> {\r\n\r\n        return fetch(API_ENDPOINTS.editAccount, {\r\n            method: 'POST',\r\n            body: JSON.stringify(account),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${library.actualToken}`\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static deleteAccount(account: Account): Promise<null> {\r\n        return fetch(API_ENDPOINTS.deleteAccount + account.id, {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(account),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${library.actualToken}`\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static changeRole(idRole: string[]): Promise<string> {\r\n\r\n        return fetch(API_ENDPOINTS.changeRole, {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(idRole),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${library.actualToken}`\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static editStudent(student: Student): Promise<Student> {\r\n\r\n        return fetch(API_ENDPOINTS.editStudent, {\r\n            method: 'PUT',\r\n            body : JSON.stringify(student),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${library.actualToken}`\r\n            }\r\n        })\r\n\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}