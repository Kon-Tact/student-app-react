{"ast":null,"code":"import Student from \"../models/Student\";\nconst jsonUrl = '/test_data.json';\nexport default class DataAccess {\n  static getRandoDatas() {\n    return fetch(jsonUrl).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      return response.json();\n    }).then(data => {\n      console.table(data);\n      let fnList = data.firstnames;\n      let lnList = data.lastnames;\n      let snList = data.streetnames;\n      let randoStud = new Student();\n      randoStud.name = this.listRand(lnList) + \" \" + this.listRand(fnList);\n      randoStud.address = this.listRand(snList);\n      return randoStud;\n    });\n  }\n  static listRand(list) {\n    const randIndex = Math.floor(Math.random() * list.length);\n    const randElement = list[randIndex];\n    return randElement;\n  }\n}","map":{"version":3,"names":["Student","jsonUrl","DataAccess","getRandoDatas","fetch","then","response","ok","Error","json","data","console","table","fnList","firstnames","lnList","lastnames","snList","streetnames","randoStud","name","listRand","address","list","randIndex","Math","floor","random","length","randElement"],"sources":["C:/Users/GODINGEN MARIE/Documents/student-app-react/src/services/data-access.ts"],"sourcesContent":["import Student from \"../models/Student\";\r\n\r\nconst jsonUrl: string = '/test_data.json';\r\n\r\nexport default class DataAccess {\r\n\r\n\r\n    static getRandoDatas(): Promise<Student> {\r\n        return fetch(jsonUrl)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch data');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                console.table(data);\r\n                let fnList: string[] = data.firstnames;\r\n                let lnList: string[] = data.lastnames;\r\n                let snList: string[] = data.streetnames;\r\n\r\n                let randoStud = new Student();\r\n\r\n                randoStud.name = this.listRand(lnList) + \" \" + this.listRand(fnList);\r\n                randoStud.address = this.listRand(snList);\r\n                return randoStud;\r\n            })\r\n    }\r\n\r\n    private static listRand(list: string[]): string {\r\n        const randIndex = Math.floor(Math.random() * list.length);\r\n        const randElement = list[randIndex];\r\n        return randElement;\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,OAAO,MAAM,mBAAmB;AAEvC,MAAMC,OAAe,GAAG,iBAAiB;AAEzC,eAAe,MAAMC,UAAU,CAAC;EAG5B,OAAOC,aAAaA,CAAA,EAAqB;IACrC,OAAOC,KAAK,CAACH,OAAO,CAAC,CAChBI,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MAC3C;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACVC,OAAO,CAACC,KAAK,CAACF,IAAI,CAAC;MACnB,IAAIG,MAAgB,GAAGH,IAAI,CAACI,UAAU;MACtC,IAAIC,MAAgB,GAAGL,IAAI,CAACM,SAAS;MACrC,IAAIC,MAAgB,GAAGP,IAAI,CAACQ,WAAW;MAEvC,IAAIC,SAAS,GAAG,IAAInB,OAAO,CAAC,CAAC;MAE7BmB,SAAS,CAACC,IAAI,GAAG,IAAI,CAACC,QAAQ,CAACN,MAAM,CAAC,GAAG,GAAG,GAAG,IAAI,CAACM,QAAQ,CAACR,MAAM,CAAC;MACpEM,SAAS,CAACG,OAAO,GAAG,IAAI,CAACD,QAAQ,CAACJ,MAAM,CAAC;MACzC,OAAOE,SAAS;IACpB,CAAC,CAAC;EACV;EAEA,OAAeE,QAAQA,CAACE,IAAc,EAAU;IAC5C,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,IAAI,CAACK,MAAM,CAAC;IACzD,MAAMC,WAAW,GAAGN,IAAI,CAACC,SAAS,CAAC;IACnC,OAAOK,WAAW;EACtB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}