{"ast":null,"code":"import API_ENDPOINTS from \"../config/api-config\";\nimport Account from \"../models/Account\";\nexport default class ApiAccess {\n  static getStudents() {\n    return fetch(API_ENDPOINTS.studentList).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch students');\n      }\n      return response.json();\n    }).catch(error => {\n      console.error('Error fetching students:', error);\n      return []; // Return a default value (empty array) in case of error\n    });\n  }\n  static login(credentials) {\n    return fetch(API_ENDPOINTS.login, {\n      method: 'POST',\n      body: JSON.stringify(credentials),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch login');\n      }\n      return response.json();\n    }).catch(error => {\n      console.error('Error fetching login', error);\n      return new Account();\n    });\n  }\n  static logout() {\n    return fetch(API_ENDPOINTS.logout, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => console.error(error));\n  }\n  static saveStudent(student) {\n    return fetch(API_ENDPOINTS.saveStudent, {\n      method: 'POST',\n      body: JSON.stringify(student),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => console.error(error));\n  }\n  static clearBase() {\n    return fetch(API_ENDPOINTS.clearBase, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => console.error(error));\n  }\n  static deleteStudent(student) {\n    return fetch(API_ENDPOINTS.deleteStudent + student.id, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(reponse => reponse.json()).catch(error => console.error(error));\n  }\n  static getAccountList() {\n    return fetch(API_ENDPOINTS.accountList).then(response => response.json()).catch(error => console.error(error));\n  }\n  static saveAccount(account) {\n    return fetch(API_ENDPOINTS.saveAccount, {\n      method: 'POST',\n      body: JSON.stringify(account),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => console.error(error));\n  }\n  static editAccount(account) {\n    return fetch(API_ENDPOINTS.editAccount, {\n      method: 'POST',\n      body: JSON.stringify(account),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => console.error(error));\n  }\n  static deleteAccount(account) {\n    return fetch(API_ENDPOINTS.deleteAccount + account.id, {\n      method: 'DELETE',\n      body: JSON.stringify(account),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => console.error(error));\n  }\n  static changeRole(idRole) {\n    return fetch(API_ENDPOINTS.changeRole, {\n      method: 'DELETE',\n      body: JSON.stringify(idRole),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => console.error(error));\n  }\n}","map":{"version":3,"names":["API_ENDPOINTS","Account","ApiAccess","getStudents","fetch","studentList","then","response","ok","Error","json","catch","error","console","login","credentials","method","body","JSON","stringify","headers","logout","saveStudent","student","clearBase","deleteStudent","id","reponse","getAccountList","accountList","saveAccount","account","editAccount","deleteAccount","changeRole","idRole"],"sources":["C:/Users/GODINGEN MARIE/Documents/student-app-react/src/services/api-access.ts"],"sourcesContent":["import Student from \"../models/Student\";\r\nimport API_ENDPOINTS from \"../config/api-config\";\r\nimport Account from \"../models/Account\";\r\nimport AccountResponse from \"../models/AccountResponse\";\r\nimport Credentials from \"../models/Credentials\";\r\n\r\nexport default class ApiAccess {\r\n\r\n    static getStudents(): Promise<Student[]> {\r\n        return fetch(API_ENDPOINTS.studentList)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch students');\r\n                }\r\n                return response.json();\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching students:', error);\r\n                return []; // Return a default value (empty array) in case of error\r\n            });\r\n    }\r\n\r\n    static login(credentials: Credentials): Promise<AccountResponse> {\r\n        return fetch(API_ENDPOINTS.login, {\r\n            method: 'POST',\r\n            body: JSON.stringify(credentials),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        })\r\n            .then(response => {\r\n                if(!response.ok) {\r\n                    throw new Error('Failed to fetch login');\r\n                }\r\n                return response.json();\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching login', error);\r\n                return new Account();\r\n            })\r\n    }\r\n\r\n    static logout(): Promise<null> {\r\n        return fetch(API_ENDPOINTS.logout, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static saveStudent(student: Student): Promise<Student>  {\r\n        return fetch(API_ENDPOINTS.saveStudent, {\r\n            method: 'POST',\r\n            body: JSON.stringify(student),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static clearBase(): Promise<null> {\r\n        return fetch(API_ENDPOINTS.clearBase, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static deleteStudent(student: Student): Promise<null>  {\r\n        return fetch(API_ENDPOINTS.deleteStudent + student.id, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        })\r\n            .then(reponse => reponse.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static getAccountList(): Promise<Account[]> {\r\n        return fetch(API_ENDPOINTS.accountList)\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static saveAccount(account: Account): Promise<AccountResponse> {\r\n        return fetch(API_ENDPOINTS.saveAccount, {\r\n            method: 'POST',\r\n            body: JSON.stringify(account),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static editAccount(account: Account): Promise<Account> {\r\n        return fetch(API_ENDPOINTS.editAccount, {\r\n            method: 'POST',\r\n            body: JSON.stringify(account),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static deleteAccount(account: Account): Promise<null> {\r\n        return fetch(API_ENDPOINTS.deleteAccount + account.id, {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(account),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    static changeRole(idRole: string[]): Promise<string> {\r\n        return fetch(API_ENDPOINTS.changeRole, {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(idRole),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}