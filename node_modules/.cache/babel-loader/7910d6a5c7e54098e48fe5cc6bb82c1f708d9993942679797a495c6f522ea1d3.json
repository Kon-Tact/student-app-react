{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GODINGEN MARIE\\\\Documents\\\\student-app-react\\\\src\\\\component\\\\UserNavBar.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useState } from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport PersonAddAltIcon from '@mui/icons-material/PersonAddAlt';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport IconButton from '@mui/material/IconButton/IconButton';\nimport { useHistory } from 'react-router-dom';\nimport ApiAccess from '../services/api-access';\nimport MyModal from './MyModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pages = ['Enregistrement étudiant'];\nconst settings = ['Profil', 'Deconnexion'];\nfunction UserNavBar() {\n  _s();\n  // Check if the screen size is medium or smaller\n  const isMediumScreen = useMediaQuery('(max-width: 800px)');\n  const [isLogoutDialogOpen, setLogoutDialog] = useState(false);\n  const LogoutManagement = () => {\n    ApiAccess.logout();\n  };\n  const history = useHistory();\n  const goToPage = path => {\n    history.push(path);\n  };\n  const openLogoutDialog = () => {\n    setLogoutDialog(true);\n  };\n  const closeLogoutDialog = () => {\n    setLogoutDialog(false);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          sx: {\n            justifyContent: 'space-between'\n          },\n          disableGutters: true,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: isMediumScreen ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"large\",\n                \"aria-label\": \"add student button\",\n                \"aria-haspopup\": \"true\",\n                color: \"inherit\",\n                onClick: () => goToPage('/student/registration'),\n                children: /*#__PURE__*/_jsxDEV(PersonAddAltIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this) : pages.map(page => /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                color: 'inherit',\n                mr: 2\n              },\n              children: page\n            }, page, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            noWrap: true,\n            component: \"a\",\n            href: \"#app-bar-with-responsive-menu\",\n            sx: {\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              color: 'inherit',\n              textDecoration: 'none'\n            },\n            children: \"Students APP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: isMediumScreen ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"large\",\n                \"aria-label\": \"deconnection\",\n                \"aria-haspopup\": \"true\",\n                color: \"inherit\",\n                onClick: openLogoutDialog,\n                children: /*#__PURE__*/_jsxDEV(LogoutIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"large\",\n                \"aria-label\": \"account update\",\n                \"aria-haspopup\": \"true\",\n                color: \"inherit\",\n                onClick: () => goToPage('/profil'),\n                children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this) : settings.map(setting => /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                color: 'inherit'\n              },\n              children: setting\n            }, setting, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      isOpen: isLogoutDialogOpen,\n      onClose: closeLogoutDialog,\n      onConfirm: LogoutManagement,\n      children: \"Vous allez vous d\\xE9connect\\xE9 \\xCAtes vous s\\xFBr de continuer ?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(UserNavBar, \"DhiTnoyPHYnsy4sRwaBuFJTORdU=\", false, function () {\n  return [useMediaQuery, useHistory];\n});\n_c = UserNavBar;\nexport default UserNavBar;\nvar _c;\n$RefreshReg$(_c, \"UserNavBar\");","map":{"version":3,"names":["React","useState","AppBar","Box","Toolbar","Typography","Container","Button","useMediaQuery","PersonAddAltIcon","LogoutIcon","AccountCircleIcon","IconButton","useHistory","ApiAccess","MyModal","jsxDEV","_jsxDEV","pages","settings","UserNavBar","_s","isMediumScreen","isLogoutDialogOpen","setLogoutDialog","LogoutManagement","logout","history","goToPage","path","push","openLogoutDialog","closeLogoutDialog","Fragment","children","position","maxWidth","sx","justifyContent","disableGutters","size","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","page","mr","variant","noWrap","component","href","fontFamily","fontWeight","textDecoration","setting","isOpen","onClose","onConfirm","_c","$RefreshReg$"],"sources":["C:/Users/GODINGEN MARIE/Documents/student-app-react/src/component/UserNavBar.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport Button from '@mui/material/Button';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport PersonAddAltIcon from '@mui/icons-material/PersonAddAlt';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport IconButton from '@mui/material/IconButton/IconButton';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ApiAccess from '../services/api-access';\r\nimport MyModal from './MyModal';\r\n\r\nconst pages = ['Enregistrement étudiant'];\r\nconst settings = ['Profil', 'Deconnexion'];\r\n\r\nfunction UserNavBar() {\r\n\r\n    // Check if the screen size is medium or smaller\r\n    const isMediumScreen = useMediaQuery('(max-width: 800px)');\r\n    const [isLogoutDialogOpen, setLogoutDialog] = useState(false);\r\n\r\n    const LogoutManagement = () => {\r\n        ApiAccess.logout();\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    const goToPage = (path: any) => {\r\n        history.push(path);\r\n    };\r\n\r\n    const openLogoutDialog = () => {\r\n        setLogoutDialog(true);\r\n    }\r\n\r\n    const closeLogoutDialog = () => {\r\n        setLogoutDialog(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AppBar position=\"static\">\r\n                <Container maxWidth=\"xl\">\r\n                    <Toolbar sx={{ justifyContent: 'space-between' }} disableGutters>\r\n                        <Box>\r\n                            {isMediumScreen ? (\r\n                                <React.Fragment>\r\n                                    <IconButton\r\n                                        size=\"large\"\r\n                                        aria-label=\"add student button\"\r\n                                        aria-haspopup=\"true\"\r\n                                        color=\"inherit\"\r\n                                        onClick={() => goToPage('/student/registration')}\r\n                                    >\r\n                                        <PersonAddAltIcon />\r\n                                    </IconButton>\r\n                                </React.Fragment>\r\n                            ) : (\r\n                                pages.map((page) => (\r\n                                    <Button key={page} sx={{ color: 'inherit', mr: 2 }}>\r\n                                        {page}\r\n                                    </Button>\r\n                                ))\r\n                            )}\r\n                        </Box>\r\n\r\n                        <Typography\r\n                            variant=\"h6\"\r\n                            noWrap\r\n                            component=\"a\"\r\n                            href=\"#app-bar-with-responsive-menu\"\r\n                            sx={{\r\n                                fontFamily: 'monospace',\r\n                                fontWeight: 700,\r\n                                color: 'inherit',\r\n                                textDecoration: 'none',\r\n                            }}\r\n                        >\r\n                            Students APP\r\n                        </Typography>\r\n                        <Box>\r\n                            {isMediumScreen ? (\r\n                                <React.Fragment>\r\n                                    <IconButton\r\n                                        size=\"large\"\r\n                                        aria-label=\"deconnection\"\r\n                                        aria-haspopup=\"true\"\r\n                                        color=\"inherit\"\r\n                                        onClick={openLogoutDialog}\r\n                                    >\r\n                                        <LogoutIcon />\r\n                                    </IconButton>\r\n                                    <IconButton\r\n                                        size=\"large\"\r\n                                        aria-label=\"account update\"\r\n                                        aria-haspopup=\"true\"\r\n                                        color=\"inherit\"\r\n                                        onClick={() => goToPage('/profil')}\r\n                                    >\r\n                                        <AccountCircleIcon />\r\n                                    </IconButton>\r\n                                </React.Fragment>\r\n                            ) : (\r\n                                settings.map((setting) => (\r\n                                    <Button key={setting} sx={{ color: 'inherit' }} >\r\n                                        {setting}\r\n                                    </Button>\r\n                                ))\r\n                            )}\r\n                        </Box>\r\n                    </Toolbar>\r\n                </Container>\r\n            </AppBar>\r\n\r\n            <MyModal isOpen={isLogoutDialogOpen} onClose={closeLogoutDialog} onConfirm={LogoutManagement}>\r\n                Vous allez vous déconnecté\r\n                Êtes vous sûr de continuer ?\r\n            </MyModal>\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\nexport default UserNavBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}