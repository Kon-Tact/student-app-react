{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GODINGEN MARIE\\\\Documents\\\\student-app-react\\\\src\\\\component\\\\UnconnectedNavBar.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\nimport LoginIcon from '@mui/icons-material/Login';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport PersonAddAltIcon from '@mui/icons-material/PersonAddAlt';\nimport DeleteSweepIcon from '@mui/icons-material/DeleteSweep';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport IconButton from '@mui/material/IconButton/IconButton';\nimport { useHistory } from 'react-router-dom';\nimport ConnectedAccount from '../models/ConnectedAccount';\nimport Modal from 'react-modal';\nimport { Stack } from '@mui/material';\nimport routes from '../helpers/routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst pages = ['Student registration', 'Clear base'];\nconst settings = ['Login', 'Sign in'];\nfunction UnconnectedNavBar() {\n  _s();\n  // Check if the screen size is medium or smaller\n  const isMediumScreen = useMediaQuery('(max-width: 800px)');\n  const history = useHistory();\n  const goToPage = path => {\n    console.table(ConnectedAccount);\n    history.push(path);\n  };\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        sx: {\n          justifyContent: 'space-between'\n        },\n        disableGutters: true,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: isMediumScreen ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"large\",\n              \"aria-label\": \"add student button\",\n              \"aria-haspopup\": \"true\",\n              color: \"inherit\",\n              children: /*#__PURE__*/_jsxDEV(PersonAddAltIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"large\",\n              \"aria-label\": \"clear base button\",\n              \"aria-haspopup\": \"true\",\n              color: \"inherit\",\n              children: /*#__PURE__*/_jsxDEV(DeleteSweepIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this) : pages.map(page => /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              color: 'inherit',\n              mr: 2\n            },\n            children: page\n          }, page, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          component: \"a\",\n          href: \"#app-bar-with-responsive-menu\",\n          sx: {\n            fontFamily: 'monospace',\n            fontWeight: 700,\n            color: 'inherit',\n            textDecoration: 'none'\n          },\n          children: \"Students APP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: isMediumScreen ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"large\",\n              \"aria-label\": \"login\",\n              \"aria-haspopup\": \"true\",\n              color: \"inherit\",\n              onClick: () => goToPage('/login'),\n              children: /*#__PURE__*/_jsxDEV(LoginIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"large\",\n              \"aria-label\": \"sign in\",\n              \"aria-haspopup\": \"true\",\n              color: \"inherit\",\n              onClick: () => goToPage('/register'),\n              children: /*#__PURE__*/_jsxDEV(PersonAddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 1,\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                color: 'inherit'\n              },\n              onClick: () => goToPage(routes.connexion),\n              children: settings[0]\n            }, settings[0], false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                color: 'inherit'\n              },\n              onClick: () => goToPage(routes.register),\n              children: settings[1]\n            }, settings[1], false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(UnconnectedNavBar, \"3nKgvfgG0IyyuLkpEjmMMH0BAkg=\", false, function () {\n  return [useMediaQuery, useHistory];\n});\n_c = UnconnectedNavBar;\nexport default UnconnectedNavBar;\nvar _c;\n$RefreshReg$(_c, \"UnconnectedNavBar\");","map":{"version":3,"names":["React","AppBar","Box","Toolbar","Typography","Container","Button","LoginIcon","useMediaQuery","PersonAddAltIcon","DeleteSweepIcon","PersonAddIcon","IconButton","useHistory","ConnectedAccount","Modal","Stack","routes","jsxDEV","_jsxDEV","setAppElement","pages","settings","UnconnectedNavBar","_s","isMediumScreen","history","goToPage","path","console","table","push","position","children","maxWidth","sx","justifyContent","disableGutters","Fragment","size","color","fileName","_jsxFileName","lineNumber","columnNumber","map","page","mr","variant","noWrap","component","href","fontFamily","fontWeight","textDecoration","onClick","spacing","direction","connexion","register","_c","$RefreshReg$"],"sources":["C:/Users/GODINGEN MARIE/Documents/student-app-react/src/component/UnconnectedNavBar.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport Button from '@mui/material/Button';\r\nimport LoginIcon from '@mui/icons-material/Login';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport PersonAddAltIcon from '@mui/icons-material/PersonAddAlt';\r\nimport DeleteSweepIcon from '@mui/icons-material/DeleteSweep';\r\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\r\nimport IconButton from '@mui/material/IconButton/IconButton';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ConnectedAccount from '../models/ConnectedAccount';\r\nimport Modal from 'react-modal';\r\nimport { Stack } from '@mui/material';\r\nimport routes from '../helpers/routes';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst pages = ['Student registration', 'Clear base'];\r\nconst settings = ['Login', 'Sign in'];\r\n\r\nfunction UnconnectedNavBar() {\r\n\r\n  // Check if the screen size is medium or smaller\r\n  const isMediumScreen = useMediaQuery('(max-width: 800px)');\r\n\r\n\r\n  const history = useHistory();\r\n\r\n  const goToPage = (path: any) => {\r\n    console.table(ConnectedAccount);\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar sx={{ justifyContent: 'space-between' }} disableGutters>\r\n          <Box>\r\n            {isMediumScreen ? (\r\n              <React.Fragment>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  aria-label=\"add student button\"\r\n                  aria-haspopup=\"true\"\r\n                  color=\"inherit\"\r\n                >\r\n                  <PersonAddAltIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  aria-label=\"clear base button\"\r\n                  aria-haspopup=\"true\"\r\n                  color=\"inherit\"\r\n                >\r\n                  <DeleteSweepIcon />\r\n                </IconButton>\r\n              </React.Fragment>\r\n            ) : (\r\n              pages.map((page) => (\r\n                <Button key={page} sx={{ color: 'inherit', mr: 2 }}>\r\n                  {page}\r\n                </Button>\r\n              ))\r\n            )}\r\n          </Box>\r\n\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"#app-bar-with-responsive-menu\"\r\n            sx={{\r\n              fontFamily: 'monospace',\r\n              fontWeight: 700,\r\n              color: 'inherit',\r\n              textDecoration: 'none',\r\n            }}\r\n          >\r\n            Students APP\r\n          </Typography>\r\n          <Box>\r\n            {isMediumScreen ? (\r\n              <React.Fragment>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  aria-label=\"login\"\r\n                  aria-haspopup=\"true\"\r\n                  color=\"inherit\"\r\n                  onClick={() => goToPage('/login')}\r\n                >\r\n                  <LoginIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  aria-label=\"sign in\"\r\n                  aria-haspopup=\"true\"\r\n                  color=\"inherit\"\r\n                  onClick={() => goToPage('/register')}\r\n                >\r\n                  <PersonAddIcon />\r\n                </IconButton>\r\n              </React.Fragment>\r\n            ) : (\r\n              <Stack spacing={1} direction=\"row\">\r\n                <Button key={settings[0]} sx={{ color: 'inherit' }} onClick={() => goToPage(routes.connexion)}>\r\n                  {settings[0]}\r\n                </Button>\r\n                <Button key={settings[1]} sx={{ color: 'inherit' }} onClick={() => goToPage(routes.register)}>\r\n                  {settings[1]}\r\n                </Button>\r\n              </Stack>\r\n            )}\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n}\r\nexport default UnconnectedNavBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}