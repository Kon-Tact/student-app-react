{"ast":null,"code":"import Student from\"../models/Student\";export default class DataAccess{static getRandoDatas(){return fetch('/test_datas.json').then(response=>{if(!response.ok){throw new Error('Failed to fetch data');}return response.json();}).then(data=>{let fnList=data.firstnames;let lnList=data.lastnames;let snList=data.streetnames;let randoStud=new Student();randoStud.name=this.listRand(lnList)+\" \"+this.listRand(fnList);randoStud.address=this.listRand(snList);return randoStud;});}static listRand(list){const randIndex=Math.floor(Math.random()*list.length);const randElement=list[randIndex];return randElement;}}","map":{"version":3,"names":["Student","DataAccess","getRandoDatas","fetch","then","response","ok","Error","json","data","fnList","firstnames","lnList","lastnames","snList","streetnames","randoStud","name","listRand","address","list","randIndex","Math","floor","random","length","randElement"],"sources":["C:/Users/GODINGEN MARIE/Documents/student-app-react/src/services/data-access.ts"],"sourcesContent":["import Student from \"../models/Student\";\r\n\r\nexport default class DataAccess {\r\n\r\n\r\n    static getRandoDatas(): Promise<Student> {\r\n        return fetch('/test_datas.json')\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch data');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                let fnList: string[] = data.firstnames;\r\n                let lnList: string[] = data.lastnames;\r\n                let snList: string[] = data.streetnames;\r\n\r\n                let randoStud = new Student();\r\n\r\n                randoStud.name = this.listRand(lnList) + \" \" + this.listRand(fnList);\r\n                randoStud.address = this.listRand(snList);\r\n                return randoStud;\r\n            })\r\n    }\r\n\r\n    private static listRand(list: string[]): string {\r\n        const randIndex = Math.floor(Math.random() * list.length);\r\n        const randElement = list[randIndex];\r\n        return randElement;\r\n    }\r\n}"],"mappings":"AAAA,MAAO,CAAAA,OAAO,KAAM,mBAAmB,CAEvC,cAAe,MAAM,CAAAC,UAAW,CAG5B,MAAO,CAAAC,aAAaA,CAAA,CAAqB,CACrC,MAAO,CAAAC,KAAK,CAAC,kBAAkB,CAAC,CAC3BC,IAAI,CAACC,QAAQ,EAAI,CACd,GAAI,CAACA,QAAQ,CAACC,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,sBAAsB,CAAC,CAC3C,CACA,MAAO,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,EAAI,CACV,GAAI,CAAAC,MAAgB,CAAGD,IAAI,CAACE,UAAU,CACtC,GAAI,CAAAC,MAAgB,CAAGH,IAAI,CAACI,SAAS,CACrC,GAAI,CAAAC,MAAgB,CAAGL,IAAI,CAACM,WAAW,CAEvC,GAAI,CAAAC,SAAS,CAAG,GAAI,CAAAhB,OAAO,CAAC,CAAC,CAE7BgB,SAAS,CAACC,IAAI,CAAG,IAAI,CAACC,QAAQ,CAACN,MAAM,CAAC,CAAG,GAAG,CAAG,IAAI,CAACM,QAAQ,CAACR,MAAM,CAAC,CACpEM,SAAS,CAACG,OAAO,CAAG,IAAI,CAACD,QAAQ,CAACJ,MAAM,CAAC,CACzC,MAAO,CAAAE,SAAS,CACpB,CAAC,CAAC,CACV,CAEA,MAAe,CAAAE,QAAQA,CAACE,IAAc,CAAU,CAC5C,KAAM,CAAAC,SAAS,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAGJ,IAAI,CAACK,MAAM,CAAC,CACzD,KAAM,CAAAC,WAAW,CAAGN,IAAI,CAACC,SAAS,CAAC,CACnC,MAAO,CAAAK,WAAW,CACtB,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}