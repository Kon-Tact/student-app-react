{"ast":null,"code":"class CookieService {\n  // Function to set a cookie\n  setCookie(name, value, days) {\n    const expires = new Date();\n    expires.setTime(expires.getTime() + days * 24 * 60 * 60 * 1000);\n    document.cookie = `${name}=${value};expires=${expires.toUTCString()};path=/;SameSite=Strict`;\n  }\n\n  // Function to get a cookie value by name\n  getCookie(name) {\n    const cookies = document.cookie.split('; ');\n    for (const cookie of cookies) {\n      const [cookieName, cookieValue] = cookie.split('=');\n      if (cookieName === name) {\n        return cookieValue;\n      }\n    }\n    return null;\n  }\n\n  // Function to remove a cookie by name\n  removeCookie(name) {\n    document.cookie = `${name}=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/`;\n  }\n}\nCookieService.token = \"token\";\nCookieService.account = \"connectedAccount\";\nconst cookieServiceInstance = new CookieService(); // Creating an instance of CookieService\n\nexport default cookieServiceInstance; // Exporting the named instance as the default export","map":{"version":3,"names":["CookieService","setCookie","name","value","days","expires","Date","setTime","getTime","document","cookie","toUTCString","getCookie","cookies","split","cookieName","cookieValue","removeCookie","token","account","cookieServiceInstance"],"sources":["C:/Users/GODINGEN MARIE/Documents/student-app-react/src/services/cookies.ts"],"sourcesContent":["class CookieService {\r\n\r\n    public static token: string = \"token\";\r\n    public static account: string = \"connectedAccount\";\r\n    // Function to set a cookie\r\n    setCookie(name: string, value: string, days: number) {\r\n        const expires = new Date();\r\n        expires.setTime(expires.getTime() + days * 24 * 60 * 60 * 1000);\r\n        document.cookie = `${name}=${value};expires=${expires.toUTCString()};path=/;SameSite=Strict`;\r\n    }\r\n\r\n    // Function to get a cookie value by name\r\n    getCookie(name: string): string | null {\r\n        const cookies = document.cookie.split('; ');\r\n        for (const cookie of cookies) {\r\n            const [cookieName, cookieValue] = cookie.split('=');\r\n            if (cookieName === name) {\r\n                return cookieValue;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Function to remove a cookie by name\r\n    removeCookie(name: string) {\r\n        document.cookie = `${name}=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/`;\r\n    }\r\n}\r\n\r\nconst cookieServiceInstance = new CookieService(); // Creating an instance of CookieService\r\n\r\nexport default cookieServiceInstance; // Exporting the named instance as the default export\r\n"],"mappings":"AAAA,MAAMA,aAAa,CAAC;EAIhB;EACAC,SAASA,CAACC,IAAY,EAAEC,KAAa,EAAEC,IAAY,EAAE;IACjD,MAAMC,OAAO,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC1BD,OAAO,CAACE,OAAO,CAACF,OAAO,CAACG,OAAO,CAAC,CAAC,GAAGJ,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IAC/DK,QAAQ,CAACC,MAAM,GAAI,GAAER,IAAK,IAAGC,KAAM,YAAWE,OAAO,CAACM,WAAW,CAAC,CAAE,yBAAwB;EAChG;;EAEA;EACAC,SAASA,CAACV,IAAY,EAAiB;IACnC,MAAMW,OAAO,GAAGJ,QAAQ,CAACC,MAAM,CAACI,KAAK,CAAC,IAAI,CAAC;IAC3C,KAAK,MAAMJ,MAAM,IAAIG,OAAO,EAAE;MAC1B,MAAM,CAACE,UAAU,EAAEC,WAAW,CAAC,GAAGN,MAAM,CAACI,KAAK,CAAC,GAAG,CAAC;MACnD,IAAIC,UAAU,KAAKb,IAAI,EAAE;QACrB,OAAOc,WAAW;MACtB;IACJ;IACA,OAAO,IAAI;EACf;;EAEA;EACAC,YAAYA,CAACf,IAAY,EAAE;IACvBO,QAAQ,CAACC,MAAM,GAAI,GAAER,IAAK,gDAA+C;EAC7E;AACJ;AA3BMF,aAAa,CAEDkB,KAAK,GAAW,OAAO;AAFnClB,aAAa,CAGDmB,OAAO,GAAW,kBAAkB;AA0BtD,MAAMC,qBAAqB,GAAG,IAAIpB,aAAa,CAAC,CAAC,CAAC,CAAC;;AAEnD,eAAeoB,qBAAqB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}