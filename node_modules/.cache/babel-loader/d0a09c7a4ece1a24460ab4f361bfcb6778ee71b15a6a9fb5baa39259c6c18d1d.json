{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GODINGEN MARIE\\\\Documents\\\\student-app-react\\\\src\\\\pages\\\\register-page.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ApiAccess from '../services/api-access';\nimport Account from '../models/Account';\nimport Grid from '@mui/material/Grid/Grid';\nimport Typography from '@mui/material/Typography/Typography';\nimport Paper from '@mui/material/Paper/Paper';\nimport TextField from '@mui/material/TextField/TextField';\nimport Button from '@mui/material/Button/Button';\n/* import Credentials from '../models/Credentials';\r\nimport ConnectedAccount from '../models/ConnectedAccount';\r\nimport cookieServiceInstance from '../services/cookies';\r\nimport library from '../helpers/library'; */\n//import AccountResponse from '../models/AccountResponse';\n//import { useHistory } from 'react-router-dom';\n//import routes from '../helpers/routes';\nimport Loader from '../component/loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  //const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [registerForm, setRegisterForm] = useState({\n    username: '',\n    password: '',\n    email: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setRegisterForm({\n      ...registerForm,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      await ApiAccess.saveAccount(new Account(registerForm.username, registerForm.password, registerForm.email));\n      /* const newCredential: Credentials = new Credentials(registerForm.username, registerForm.password);\r\n      const accountResponse: AccountResponse = await ApiAccess.login(newCredential);\r\n      ConnectedAccount.connect(accountResponse.account);\r\n      ConnectedAccount.authToken = accountResponse.token;\r\n      cookieServiceInstance.setCookie(library.account, JSON.stringify(accountResponse.account), 2);\r\n      cookieServiceInstance.setCookie(library.token, accountResponse.token, 2); */\n    } finally {\n      /* history.push(routes.home);\r\n      window.location.reload(); */\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    alignItems: \"normal\",\n    marginTop: 5,\n    style: {\n      minHeight: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 10,\n      sm: 6,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 4,\n        style: {\n          padding: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          gutterBottom: true,\n          children: \"Enregistrement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Username\",\n            name: \"username\",\n            value: registerForm.username,\n            onChange: handleChange,\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"standard\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password\",\n            name: \"password\",\n            type: \"password\",\n            value: registerForm.password,\n            onChange: handleChange,\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"standard\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email\",\n            name: \"email\",\n            type: \"text\",\n            value: registerForm.email,\n            onChange: handleChange,\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"standard\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            children: \"S'enregistrer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterPage, \"E19G04haaM7HCILY57/FwOStKRg=\");\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","ApiAccess","Account","Grid","Typography","Paper","TextField","Button","Loader","jsxDEV","_jsxDEV","RegisterPage","_s","loading","setLoading","registerForm","setRegisterForm","username","password","email","handleChange","e","name","value","target","handleSubmit","preventDefault","saveAccount","container","justifyContent","alignItems","marginTop","style","minHeight","children","item","xs","sm","md","elevation","padding","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","onChange","fullWidth","margin","required","type","color","_c","$RefreshReg$"],"sources":["C:/Users/GODINGEN MARIE/Documents/student-app-react/src/pages/register-page.tsx"],"sourcesContent":["import React, { ChangeEvent, FunctionComponent, useState } from 'react';\r\nimport ApiAccess from '../services/api-access';\r\nimport Account from '../models/Account';\r\nimport Grid from '@mui/material/Grid/Grid';\r\nimport Typography from '@mui/material/Typography/Typography';\r\nimport Paper from '@mui/material/Paper/Paper';\r\nimport TextField from '@mui/material/TextField/TextField';\r\nimport Button from '@mui/material/Button/Button';\r\n/* import Credentials from '../models/Credentials';\r\nimport ConnectedAccount from '../models/ConnectedAccount';\r\nimport cookieServiceInstance from '../services/cookies';\r\nimport library from '../helpers/library'; */\r\n//import AccountResponse from '../models/AccountResponse';\r\n//import { useHistory } from 'react-router-dom';\r\n//import routes from '../helpers/routes';\r\nimport Loader from '../component/loader';\r\n\r\nconst RegisterPage: FunctionComponent = () => {\r\n    //const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [registerForm, setRegisterForm] = useState({\r\n        username: '',\r\n        password: '',\r\n        email: ''\r\n    });\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        setRegisterForm({\r\n            ...registerForm,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        try {\r\n            await ApiAccess.saveAccount(new Account(registerForm.username, registerForm.password, registerForm.email));\r\n            /* const newCredential: Credentials = new Credentials(registerForm.username, registerForm.password);\r\n            const accountResponse: AccountResponse = await ApiAccess.login(newCredential);\r\n            ConnectedAccount.connect(accountResponse.account);\r\n            ConnectedAccount.authToken = accountResponse.token;\r\n            cookieServiceInstance.setCookie(library.account, JSON.stringify(accountResponse.account), 2);\r\n            cookieServiceInstance.setCookie(library.token, accountResponse.token, 2); */\r\n        } finally {\r\n            /* history.push(routes.home);\r\n            window.location.reload(); */\r\n        }        \r\n    };\r\n\r\n    return (\r\n        <Grid container justifyContent=\"center\" alignItems=\"normal\" marginTop={5} style={{ minHeight: '100vh' }}>\r\n            <Grid item xs={10} sm={6} md={6}>\r\n                <Paper elevation={4} style={{ padding: '20px' }}>\r\n                    <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                        Enregistrement\r\n                    </Typography>\r\n                    {loading ? (\r\n                        <Loader />\r\n                    ) : (\r\n                        <form onSubmit={handleSubmit}>\r\n                        <TextField\r\n                            label=\"Username\"\r\n                            name=\"username\"\r\n                            value={registerForm.username}\r\n                            onChange={handleChange}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            variant=\"standard\"\r\n                            required\r\n                        />\r\n                        <TextField\r\n                            label=\"Password\"\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            value={registerForm.password}\r\n                            onChange={handleChange}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            variant=\"standard\"\r\n                            required\r\n                        />\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            name=\"email\"\r\n                            type=\"text\"\r\n                            value={registerForm.email}\r\n                            onChange={handleChange}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            variant=\"standard\"\r\n                            required\r\n                        />\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                            S'enregistrer\r\n                        </Button>\r\n                    </form>\r\n                    )}\r\n                    \r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default RegisterPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}