{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GODINGEN MARIE\\\\Documents\\\\student-app-react\\\\src\\\\pages\\\\connection-page.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Grid, Paper, Typography, IconButton, Snackbar } from '@mui/material';\nimport ApiAccess from '../services/api-access';\nimport Credentials from '../models/Credentials';\nimport { useHistory } from 'react-router-dom';\nimport CloseIcon from '@mui/icons-material/Close';\nimport routes from '../helpers/routes';\nimport Loader from '../component/loader';\nimport ConnectManager from '../services/connexion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectionPage = () => {\n  _s();\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [isBadCredentialSnackOpen, setSnack] = useState(false);\n  const [connectionForm, setConnectionForm] = useState({\n    username: '',\n    password: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setConnectionForm({\n      ...connectionForm,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const accountResponse = await ApiAccess.login(new Credentials(connectionForm.username, connectionForm.password));\n      console.log(accountResponse.token);\n      if (accountResponse.token) {\n        try {\n          ConnectManager.connection(accountResponse);\n        } catch (error) {\n          console.error(error);\n        }\n      } else {\n        setSnack(true);\n        console.log(\"Bad credentials\");\n        setConnectionForm({\n          username: connectionForm.username,\n          password: ''\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching API :', error);\n    } finally {\n      setLoading(false);\n      history.push(routes.home);\n      window.location.reload();\n    }\n  };\n  const closeSnack = () => {\n    setSnack(false);\n  };\n  const action = /*#__PURE__*/_jsxDEV(IconButton, {\n    size: \"small\",\n    \"aria-label\": \"close\",\n    color: \"inherit\",\n    onClick: closeSnack,\n    children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n      fontSize: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    alignItems: \"normal\",\n    marginTop: 1,\n    style: {\n      minHeight: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 10,\n      sm: 6,\n      md: 6,\n      children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        open: isBadCredentialSnackOpen,\n        autoHideDuration: 3000,\n        onClose: closeSnack,\n        message: \"L'identifiant ou le mot de passe n'ont pas \\xE9t\\xE9 reconnus\",\n        action: action\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 4,\n        style: {\n          padding: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          gutterBottom: true,\n          children: \"Connexion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Username\",\n            name: \"username\",\n            value: connectionForm.username,\n            onChange: handleChange,\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"standard\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password\",\n            name: \"password\",\n            type: \"password\",\n            value: connectionForm.password,\n            onChange: handleChange,\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"standard\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            children: \"Se connecter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectionPage, \"RlNtTlrus0rVuZbIPONxnFgEOzU=\", false, function () {\n  return [useHistory];\n});\n_c = ConnectionPage;\nexport default ConnectionPage;\nvar _c;\n$RefreshReg$(_c, \"ConnectionPage\");","map":{"version":3,"names":["React","useState","TextField","Button","Grid","Paper","Typography","IconButton","Snackbar","ApiAccess","Credentials","useHistory","CloseIcon","routes","Loader","ConnectManager","jsxDEV","_jsxDEV","ConnectionPage","_s","history","loading","setLoading","isBadCredentialSnackOpen","setSnack","connectionForm","setConnectionForm","username","password","handleChange","e","name","value","target","handleSubmit","preventDefault","accountResponse","login","console","log","token","connection","error","push","home","window","location","reload","closeSnack","action","size","color","onClick","children","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","container","justifyContent","alignItems","marginTop","style","minHeight","item","xs","sm","md","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","elevation","padding","variant","component","gutterBottom","onSubmit","label","onChange","fullWidth","margin","required","type","_c","$RefreshReg$"],"sources":["C:/Users/GODINGEN MARIE/Documents/student-app-react/src/pages/connection-page.tsx"],"sourcesContent":["import React, { ChangeEvent, FunctionComponent, useState } from 'react';\r\nimport { TextField, Button, Grid, Paper, Typography, IconButton, Snackbar } from '@mui/material';\r\nimport ApiAccess from '../services/api-access';\r\nimport Credentials from '../models/Credentials';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport routes from '../helpers/routes';\r\nimport Loader from '../component/loader';\r\nimport ConnectManager from '../services/connexion';\r\n\r\nconst ConnectionPage: FunctionComponent = () => {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [isBadCredentialSnackOpen, setSnack] = useState(false);\r\n  const [connectionForm, setConnectionForm] = useState({\r\n    username: '',\r\n    password: '',\r\n  });\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setConnectionForm({\r\n      ...connectionForm,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const accountResponse = await ApiAccess.login(new Credentials(connectionForm.username, connectionForm.password));\r\n      console.log(accountResponse.token);\r\n      if (accountResponse.token) {\r\n        try {\r\n          ConnectManager.connection(accountResponse);\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      } else {\r\n        setSnack(true);\r\n        console.log(\"Bad credentials\");\r\n        setConnectionForm({username: connectionForm.username, password: '' });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching API :', error);\r\n    } finally {\r\n      setLoading(false);\r\n      history.push(routes.home);\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  const closeSnack = () => {\r\n    setSnack(false);\r\n  }\r\n\r\n  const action = (\r\n    <IconButton\r\n      size=\"small\"\r\n      aria-label=\"close\"\r\n      color=\"inherit\"\r\n      onClick={closeSnack}\r\n    >\r\n      <CloseIcon fontSize=\"small\" />\r\n    </IconButton>\r\n  );\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\" alignItems=\"normal\" marginTop={1} style={{ minHeight: '100vh' }}>\r\n      <Grid item xs={10} sm={6} md={6}>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n          open={isBadCredentialSnackOpen}\r\n          autoHideDuration={3000}\r\n          onClose={closeSnack}\r\n          message=\"L'identifiant ou le mot de passe n'ont pas été reconnus\"\r\n          action={action}\r\n        />\r\n        <Paper elevation={4} style={{ padding: '20px' }}>\r\n          <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n            Connexion\r\n          </Typography>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : (\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                value={connectionForm.username}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                variant=\"standard\"\r\n                required\r\n              />\r\n              <TextField\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={connectionForm.password}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                variant=\"standard\"\r\n                required\r\n              />\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                Se connecter\r\n              </Button>\r\n            </form>\r\n          )}\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ConnectionPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}